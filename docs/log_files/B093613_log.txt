

	####### B093613 R script #######

rm(list = ls(all = TRUE))
[1] 1
dfrms2 <- read.csv("../RMS2_report_1920.csv")
[1] 2
View(dfrms2)
[1] 3
library(psych, quietly = T)
[1] 4
[1] "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
library(interactions, quietly = T)
[1] 5
 [1] "interactions" "psych"        "readr"        "stats"        "graphics"     "grDevices"    "utils"       
 [8] "datasets"     "methods"      "base"        
library(ggplot2, quietly = T)
[1] 6
 [1] "ggplot2"      "interactions" "psych"        "readr"        "stats"        "graphics"     "grDevices"   
 [8] "utils"        "datasets"     "methods"      "base"        
library(car, quietly = T)
[1] 7
 [1] "car"          "carData"      "ggplot2"      "interactions" "psych"        "readr"        "stats"       
 [8] "graphics"     "grDevices"    "utils"        "datasets"     "methods"      "base"        
library(pastecs)
[1] 8
 [1] "pastecs"      "car"          "carData"      "ggplot2"      "interactions" "psych"        "readr"       
 [8] "stats"        "graphics"     "grDevices"    "utils"        "datasets"     "methods"      "base"        
library(agricolae, quietly = T)
[1] 9
 [1] "agricolae"    "pastecs"      "car"          "carData"      "ggplot2"      "interactions" "psych"       
 [8] "readr"        "stats"        "graphics"     "grDevices"    "utils"        "datasets"     "methods"     
[15] "base"        
library(sjPlot, quietly = T)
[1] 10
 [1] "sjPlot"       "agricolae"    "pastecs"      "car"          "carData"      "ggplot2"      "interactions"
 [8] "psych"        "readr"        "stats"        "graphics"     "grDevices"    "utils"        "datasets"    
[15] "methods"      "base"        
library(sjmisc, quietly = T)
[1] 11
 [1] "sjmisc"       "sjPlot"       "agricolae"    "pastecs"      "car"          "carData"      "ggplot2"     
 [8] "interactions" "psych"        "readr"        "stats"        "graphics"     "grDevices"    "utils"       
[15] "datasets"     "methods"      "base"        
str(dfrms2)
[1] 12
'data.frame':	200 obs. of  6 variables:
 $ subject  : int  1 2 3 4 5 6 7 8 9 10 ...
 $ incidents: num  0.667 0.333 0.333 0.417 0.5 ...
 $ training : int  2 2 2 2 2 2 2 2 2 2 ...
 $ feedback : int  2 1 2 1 2 1 2 1 2 1 ...
 $ empathy  : int  11 10 10 9 12 11 13 14 12 12 ...
 $ years    : int  10 7 5 7 12 10 8 10 7 9 ...
NULL
describe(dfrms2)
[1] 13
          vars   n   mean    sd median trimmed   mad  min    max  range skew kurtosis   se
subject      1 200 100.50 57.88 100.50  100.50 74.13 1.00 200.00 199.00 0.00    -1.22 4.09
incidents    2 200   0.48  0.19   0.42    0.47  0.12 0.08   0.92   0.83 0.32    -0.31 0.01
training     3 200   1.50  0.50   1.50    1.50  0.74 1.00   2.00   1.00 0.00    -2.01 0.04
 [ reached 'max' / getOption("max.print") -- omitted 3 rows ]
boxplot(dfrms2$incidents, main = "Boxplot of Incidents", xlab = "incidents")
[1] 14
hist(dfrms2$incidents, main = "Histogram of Incidents", xlab = "Incidents Score")
[1] 15
plot(density(dfrms2$incidents), main = "Visual Normality Test of Incidents", 
    xlab = "Incidents Score")
[1] 16
shapiro.test(dfrms2$incidents)
[1] 17

	Shapiro-Wilk normality test

data:  dfrms2$incidents
W = 0.96722, p-value = 0.0001303

dfrms2$log_incidents <- log(dfrms2$incidents)
[1] 18
boxplot(dfrms2$empathy, main = "Boxplot of Empathy", xlab = "Empathy Score")
[1] 19
hist(dfrms2$empathy, main = "Histogram of Empathy", xlab = "Empathy")
[1] 20
plot(density(dfrms2$empathy), main = "Visual Normality Test of Empathy", 
    xlab = "Empathy Score")
[1] 21
shapiro.test(dfrms2$empathy)
[1] 22

	Shapiro-Wilk normality test

data:  dfrms2$empathy
W = 0.97073, p-value = 0.0003477

dfrms2$log_empathy <- log(-1 * (dfrms2$empathy) + 17)
[1] 23
hist(dfrms2$log_empathy)
[1] 24
plot(density(dfrms2$log_empathy), main = "Visual Normality Test of logged Empathy", 
    xlab = "Log Empathy Score")
[1] 25
describe(dfrms2)
[1] 26
          vars   n   mean    sd median trimmed   mad  min    max  range skew kurtosis   se
subject      1 200 100.50 57.88 100.50  100.50 74.13 1.00 200.00 199.00 0.00    -1.22 4.09
incidents    2 200   0.48  0.19   0.42    0.47  0.12 0.08   0.92   0.83 0.32    -0.31 0.01
training     3 200   1.50  0.50   1.50    1.50  0.74 1.00   2.00   1.00 0.00    -2.01 0.04
 [ reached 'max' / getOption("max.print") -- omitted 5 rows ]
boxplot(dfrms2$years, main = "Boxplot of Years", xlab = "Years of Experience")
[1] 27
hist(dfrms2$years, main = "Histogram of Years", xlab = "Years of Experience")
[1] 28
plot(density(dfrms2$years), main = "Visual Normality Test of Years", 
    xlab = "Years of Experience")
[1] 29
shapiro.test(dfrms2$years)
[1] 30

	Shapiro-Wilk normality test

data:  dfrms2$years
W = 0.97276, p-value = 0.0006279

dfrms2$log_years <- log(dfrms2$years)
[1] 31
plot(density(dfrms2$log_years), main = "Visual Normality Test of logged Years", 
    xlab = "Log Years of Experience")
[1] 32
describe(dfrms2)
[1] 33
          vars   n   mean    sd median trimmed   mad  min    max  range skew kurtosis   se
subject      1 200 100.50 57.88 100.50  100.50 74.13 1.00 200.00 199.00 0.00    -1.22 4.09
incidents    2 200   0.48  0.19   0.42    0.47  0.12 0.08   0.92   0.83 0.32    -0.31 0.01
training     3 200   1.50  0.50   1.50    1.50  0.74 1.00   2.00   1.00 0.00    -2.01 0.04
 [ reached 'max' / getOption("max.print") -- omitted 6 rows ]
table(dfrms2$training)
[1] 34

  1   2 
100 100 
table(dfrms2$feedback)
[1] 35

  1   2 
100 100 
dfrms2$training <- factor(dfrms2$training, labels = c("no training", 
    "training"))
[1] 36
dfrms2$feedback <- factor(dfrms2$feedback, labels = c("no feedback", 
    "feedback"))
[1] 37
is.factor(dfrms2$training)
[1] 38
[1] TRUE
is.factor(dfrms2$feedback)
[1] 39
[1] TRUE
summary(dfrms2$training)
[1] 40
no training    training 
        100         100 
summary(dfrms2$feedback)
[1] 41
no feedback    feedback 
        100         100 
contrasts(dfrms2$training)
[1] 42
            training
no training        0
training           1
contrasts(dfrms2$feedback)
[1] 43
            feedback
no feedback        0
feedback           1
plot(dfrms2$training, dfrms2$incident, main = "Training Condition and % Incidents Intervened", 
    xlab = "training", ylab = "bullying incidents (%)")
[1] 44
plot(dfrms2$feedback, dfrms2$incident, main = "Feedback Condition and % of Incidents Intervened", 
    xlab = "feedback", ylab = "bullying incidents (%)")
[1] 45
mean(dfrms2$incidents)
[1] 46
[1] 0.475
incident_mean_bytraining <- tapply(X = dfrms2$incidents, INDEX = list(dfrms2$training), 
    FUN = mean)
[1] 47
incident_mean_byfeedback <- tapply(X = dfrms2$incidents, INDEX = list(dfrms2$feedback), 
    FUN = mean)
[1] 48
incident_mean_bytraining

no training    training 
  0.5416667   0.4083333 


incident_mean_byfeedback

no feedback    feedback 
  0.4133333   0.5366667 


with(dfrms2, tapply(dfrms2$incident, list(dfrms2$training, dfrms2$feedback), 
    mean))
[1] 51
            no feedback  feedback
no training   0.4933333 0.5900000
training      0.3333333 0.4833333
plot(dfrms2$empathy, dfrms2$incidents, main = "Plot of Empathy Score & Incidents Intervened", 
    xlab = "empathy score", ylab = "bullying incidents (%)", 
    pch = 16)
[1] 52
plot(dfrms2$years, dfrms2$incidents, main = "Plot of Teaching Years & Incidents Intervened", 
    xlab = "years experience", ylab = "bullying incidents (%)", 
    pch = 16)
[1] 53
mean_emp <- mean(dfrms2$empathy)
[1] 54
sd_emp <- sd(dfrms2$empathy)
[1] 55
dfrms2$z_empathy <- (dfrms2$empathy - mean_emp)/(sd_emp)
[1] 56
dfrms2$mc_years <- dfrms2$years - (mean(dfrms2$years))
[1] 57
describe(dfrms2$mc_years)
[1] 58
   vars   n mean   sd median trimmed  mad   min   max range skew kurtosis   se
X1    1 200    0 3.08  -0.13   -0.16 2.97 -7.13 10.87    18 0.52     0.48 0.22
par(mfrow = c(2, 2))
[1] 59
$mfrow
[1] 1 1

plot(density(dfrms2$incidents), main = "Visual Normality Test of Incidents", 
    xlab = "Incidents Score")
[1] 60
plot(density(dfrms2$empathy), main = "Visual Normality Test of Empathy", 
    xlab = "Empathy Score")
[1] 61
plot(density(dfrms2$years), main = "Visual Normality Test of Years", 
    xlab = "Years of Experience")
[1] 62
par(mfrow = c(2, 2))
[1] 63
$mfrow
[1] 2 2

plot(density(dfrms2$log_incidents), main = "Normality Test of logged Incidents", 
    xlab = "Log Incidents Score")
[1] 64
plot(density(dfrms2$log_empathy), main = "Normality Test of logged Empathy", 
    xlab = "Log Empathy Score")
[1] 65
plot(density(dfrms2$log_years), main = "Normality Test of logged Years", 
    xlab = "Log Years of Experience")
[1] 66
par(mfrow = c(1, 1))
[1] 67
$mfrow
[1] 2 2

dtablereport <- describe(dfrms2)
[1] 68
dtablereport[c(2:6, 10, 11), c(2:4, 8:12)]
[1] 69
            n  mean   sd   min   max range  skew kurtosis
incidents 200  0.48 0.19  0.08  0.92  0.83  0.32    -0.31
training* 200  1.50 0.50  1.00  2.00  1.00  0.00    -2.01
feedback* 200  1.50 0.50  1.00  2.00  1.00  0.00    -2.01
empathy   200 10.18 2.54  3.00 16.00 13.00 -0.37     0.23
years     200  8.13 3.08  1.00 19.00 18.00  0.52     0.48
z_empathy 200  0.00 1.00 -2.83  2.30  5.12 -0.37     0.23
 [ reached 'max' / getOption("max.print") -- omitted 1 rows ]
pc <- cor.test(dfrms2$empathy, dfrms2$years, method = "pearson")
[1] 70
pc


	Pearson's product-moment correlation

data:  dfrms2$empathy and dfrms2$years
t = 3.852, df = 198, p-value = 0.0001582
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 0.1300604 0.3885445
sample estimates:
      cor 
0.2640369 



sc <- cor.test(dfrms2$empathy, dfrms2$years, method = "spearman", 
    exact = F)
[1] 72
sc


	Spearman's rank correlation rho

data:  dfrms2$empathy and dfrms2$years
S = 923838, p-value = 9.723e-06
alternative hypothesis: true rho is not equal to 0
sample estimates:
      rho 
0.3071045 



m1 <- lm(incidents ~ training + empathy + years, data = dfrms2)
[1] 74
summary(m1)
[1] 75

Call:
lm(formula = incidents ~ training + empathy + years, data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.35648 -0.12270 -0.01474  0.10105  0.53180 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.407320   0.051814   7.861 2.48e-13 ***
trainingtraining -0.152427   0.023166  -6.580 4.20e-10 ***
empathy           0.025396   0.004735   5.363 2.29e-07 ***
years            -0.014085   0.003889  -3.622 0.000372 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1621 on 196 degrees of freedom
Multiple R-squared:  0.2565,	Adjusted R-squared:  0.2451 
F-statistic: 22.53 on 3 and 196 DF,  p-value: 1.408e-12

m1b <- lm(incidents ~ training + z_empathy + mc_years, data = dfrms2)
[1] 76
summary(m1b)
[1] 77

Call:
lm(formula = incidents ~ training + z_empathy + mc_years, data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.35648 -0.12270 -0.01474  0.10105  0.53180 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.551213   0.016298  33.821  < 2e-16 ***
trainingtraining -0.152427   0.023166  -6.580 4.20e-10 ***
z_empathy         0.064430   0.012014   5.363 2.29e-07 ***
mc_years         -0.014085   0.003889  -3.622 0.000372 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1621 on 196 degrees of freedom
Multiple R-squared:  0.2565,	Adjusted R-squared:  0.2451 
F-statistic: 22.53 on 3 and 196 DF,  p-value: 1.408e-12

par(mfrow = c(2, 2))
[1] 78
$mfrow
[1] 1 1

hist(m1b$residuals, main = "Histogram of m1b Residuals", xlab = "m1b Residuals")
[1] 79
qqPlot(m1b, main = "QQ-plot of m1b")
[1] 80
plot(m1b, which = 2, main = "Normal Q-Q m1b")
[1] 81
shapiro.test(resid(m1b))
[1] 82

	Shapiro-Wilk normality test

data:  resid(m1b)
W = 0.97994, p-value = 0.005838

plot(m1b, which = 3)
[1] 83
residualPlots(m1b)
[1] 84
ncvTest(m1b)
[1] 85
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.0293323, Df = 1, p = 0.86401
crPlots(m1b)
[1] 86
par(mfrow = c(1, 1))
[1] 87
$mfrow
[1] 2 2

plot(m1b, which = 1, main = "Model M1b")
[1] 88
durbinWatsonTest(m1b)
[1] 89
 lag Autocorrelation D-W Statistic p-value
   1      -0.1072849      2.199897   0.166
 Alternative hypothesis: rho != 0
vif(m1b)
[1] 90
 training z_empathy  mc_years 
 1.020633  1.092467  1.085089 
cd_m1b <- cooks.distance(m1b)
[1] 91
which(cd_m1b > (4/(200 - 3 - 1)))
[1] 92
 13  35  74 137 165 
 13  35  74 137 165 
plot(m1b, which = 4, main = "M1b")
[1] 93
cookm1b <- lm(incidents ~ training + z_empathy + mc_years, data = dfrms2[-c(13, 
    74, 137), ])
[1] 94
summary(cookm1b)
[1] 95

Call:
lm(formula = incidents ~ training + z_empathy + mc_years, data = dfrms2[-c(13, 
    74, 137), ])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.29350 -0.11585 -0.00812  0.10001  0.40267 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.549455   0.015645  35.119  < 2e-16 ***
trainingtraining -0.153719   0.022279  -6.900 7.28e-11 ***
z_empathy         0.073659   0.011812   6.236 2.77e-09 ***
mc_years         -0.016244   0.003864  -4.204 4.01e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1552 on 193 degrees of freedom
Multiple R-squared:  0.2988,	Adjusted R-squared:  0.2879 
F-statistic: 27.41 on 3 and 193 DF,  p-value: 8.212e-15

m1b_coef <- summary(m1b)
[1] 96
cookm1b_coef <- summary(cookm1b)
[1] 97
comparem1bs <- data.frame(round(m1b_coef$coefficients[, 1], 2), 
    round(m1b_coef$coefficients[, 4], 4), round(cookm1b_coef$coefficients[, 
        1], 2), round(cookm1b_coef$coefficients[, 4], 4))
[1] 98
colnames(comparem1bs) <- c("m1b beta", "m1b p-value", "m1b cook beta", 
    "m1b cook p-value")
[1] 99
comparem1bs

                 m1b beta m1b p-value m1b cook beta m1b cook p-value
(Intercept)          0.55       0e+00          0.55                0
trainingtraining    -0.15       0e+00         -0.15                0
z_empathy            0.06       0e+00          0.07                0
mc_years            -0.01       4e-04         -0.02                0


m2b <- lm(incidents ~ feedback + z_empathy + mc_years, data = dfrms2)
[1] 101
summary(m2b)
[1] 102

Call:
lm(formula = incidents ~ feedback + z_empathy + mc_years, data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.35580 -0.11148 -0.01097  0.11092  0.53552 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.408934   0.016655  24.553  < 2e-16 ***
feedbackfeedback  0.132132   0.023585   5.602 7.09e-08 ***
z_empathy         0.058827   0.012251   4.802 3.11e-06 ***
mc_years         -0.012689   0.003975  -3.192  0.00165 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1663 on 196 degrees of freedom
Multiple R-squared:  0.2175,	Adjusted R-squared:  0.2055 
F-statistic: 18.16 on 3 and 196 DF,  p-value: 1.933e-10

par(mfrow = c(2, 2))
[1] 103
$mfrow
[1] 1 1

hist(m2b$residuals, main = "Histogram of m2b Residuals", xlab = "m2b Residuals")
[1] 104
qqPlot(m2b, main = "QQ-plot of m2b")
[1] 105
plot(m2b, which = 2, main = "Normal Q-Q m2b")
[1] 106
shapiro.test(resid(m2b))
[1] 107

	Shapiro-Wilk normality test

data:  resid(m2b)
W = 0.98772, p-value = 0.08174

plot(m2b, which = 3)
[1] 108
residualPlots(m2b)
[1] 109
ncvTest(m2b)
[1] 110
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.01731234, Df = 1, p = 0.89532
crPlots(m2b)
[1] 111
par(mfrow = c(1, 1))
[1] 112
$mfrow
[1] 2 2

plot(m2b, which = 1)
[1] 113
durbinWatsonTest(m2b)
[1] 114
 lag Autocorrelation D-W Statistic p-value
   1       0.2738264      1.444081       0
 Alternative hypothesis: rho != 0
vif(m2b)
[1] 115
 feedback z_empathy  mc_years 
 1.005211  1.079397  1.077467 
cd_m2b <- cooks.distance(m2b)
[1] 116
which(cd_m2b > (4/(200 - 3 - 1)))
[1] 117
 73  74  89 137 156 160 165 176 
 73  74  89 137 156 160 165 176 
plot(m2b, which = 4)
[1] 118
cookm2b <- lm(incidents ~ feedback + z_empathy + mc_years, data = dfrms2[-c(74, 
    89, 137), ])
[1] 119
summary(cookm2b)
[1] 120

Call:
lm(formula = incidents ~ feedback + z_empathy + mc_years, data = dfrms2[-c(74, 
    89, 137), ])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.34740 -0.11326 -0.01073  0.11335  0.53413 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.412290   0.016427  25.098  < 2e-16 ***
feedbackfeedback  0.128900   0.023282   5.537 9.99e-08 ***
z_empathy         0.063141   0.012557   5.028 1.13e-06 ***
mc_years         -0.013583   0.004147  -3.276  0.00125 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1633 on 193 degrees of freedom
Multiple R-squared:  0.2282,	Adjusted R-squared:  0.2162 
F-statistic: 19.02 on 3 and 193 DF,  p-value: 7.541e-11

m2b_coef <- summary(m2b)
[1] 121
cookm2b_coef <- summary(cookm2b)
[1] 122
comparem2bs <- data.frame(round(m2b_coef$coefficients[, 1], 2), 
    round(m2b_coef$coefficients[, 4], 4), round(cookm2b_coef$coefficients[, 
        1], 2), round(cookm2b_coef$coefficients[, 4], 4))
[1] 123
colnames(comparem2bs) <- c("m2b beta", "m2b p-value", "m2b cook beta", 
    "m2b cook p-value")
[1] 124
comparem2bs

                 m2b beta m2b p-value m2b cook beta m2b cook p-value
(Intercept)          0.41      0.0000          0.41           0.0000
feedbackfeedback     0.13      0.0000          0.13           0.0000
z_empathy            0.06      0.0000          0.06           0.0000
mc_years            -0.01      0.0016         -0.01           0.0013


m3b <- lm(incidents ~ training + feedback + z_empathy + mc_years, 
    data = dfrms2)
[1] 126
summary(m3b)
[1] 127

Call:
lm(formula = incidents ~ training + feedback + z_empathy + mc_years, 
    data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31626 -0.10096 -0.00949  0.09165  0.46650 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.485055   0.018126  26.760  < 2e-16 ***
trainingtraining -0.153824   0.021128  -7.281 7.98e-12 ***
feedbackfeedback  0.133715   0.020968   6.377 1.28e-09 ***
z_empathy         0.068984   0.010980   6.283 2.12e-09 ***
mc_years         -0.015199   0.003551  -4.281 2.92e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1479 on 195 degrees of freedom
Multiple R-squared:  0.3848,	Adjusted R-squared:  0.3721 
F-statistic: 30.49 on 4 and 195 DF,  p-value: < 2.2e-16

par(mfrow = c(2, 2))
[1] 128
$mfrow
[1] 1 1

hist(m3b$residuals, main = "Histogram of m3b Residuals", xlab = "m3b Residuals")
[1] 129
qqPlot(m3b, main = "QQ-plot of m3b")
[1] 130
plot(m3b, which = 2, main = "Normal Q-Q m3b")
[1] 131
shapiro.test(resid(m3b))
[1] 132

	Shapiro-Wilk normality test

data:  resid(m3b)
W = 0.98734, p-value = 0.07172

plot(m3b, which = 3)
[1] 133
residualPlots(m3b)
[1] 134
ncvTest(m3b)
[1] 135
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 3.684027, Df = 1, p = 0.054936
crPlots(m3b)
[1] 136
par(mfrow = c(1, 1))
[1] 137
$mfrow
[1] 2 2

plot(m3b, which = 1, main = "m3b")
[1] 138
durbinWatsonTest(m3b)
[1] 139
 lag Autocorrelation D-W Statistic p-value
   1      0.07303546      1.841386   0.274
 Alternative hypothesis: rho != 0
vif(m3b)
[1] 140
 training  feedback z_empathy  mc_years 
 1.020743  1.005320  1.097109  1.087722 
cd_m3b <- cooks.distance(m3b)
[1] 141
which(cd_m3b > (4/(200 - 4 - 1)))
[1] 142
 13  35  74 117 131 137 141 156 160 176 
 13  35  74 117 131 137 141 156 160 176 
plot(m3b, which = 4)
[1] 143
cookm3b <- lm(incidents ~ training + feedback + z_empathy + mc_years, 
    data = dfrms2[-c(13, 137, 176), ])
[1] 144
summary(cookm3b)
[1] 145

Call:
lm(formula = incidents ~ training + feedback + z_empathy + mc_years, 
    data = dfrms2[-c(13, 137, 176), ])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31479 -0.10102 -0.00300  0.09041  0.35676 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.479439   0.017312  27.693  < 2e-16 ***
trainingtraining -0.153003   0.020113  -7.607 1.22e-12 ***
feedbackfeedback  0.132020   0.019981   6.607 3.76e-10 ***
z_empathy         0.073938   0.010573   6.993 4.34e-11 ***
mc_years         -0.017169   0.003489  -4.921 1.85e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.14 on 192 degrees of freedom
Multiple R-squared:  0.4232,	Adjusted R-squared:  0.4112 
F-statistic: 35.22 on 4 and 192 DF,  p-value: < 2.2e-16

m3b_coef <- summary(m3b)
[1] 146
cookm3b_coef <- summary(cookm3b)
[1] 147
comparem3bs <- data.frame(round(m3b_coef$coefficients[, 1], 2), 
    round(m3b_coef$coefficients[, 4], 4), round(cookm3b_coef$coefficients[, 
        1], 2), round(cookm3b_coef$coefficients[, 4], 4))
[1] 148
colnames(comparem3bs) <- c("m3b beta", "m3b p-value", "m3b cook beta", 
    "m3b cook p-value")
[1] 149
comparem3bs

                 m3b beta m3b p-value m3b cook beta m3b cook p-value
(Intercept)          0.49           0          0.48                0
trainingtraining    -0.15           0         -0.15                0
feedbackfeedback     0.13           0          0.13                0
z_empathy            0.07           0          0.07                0
mc_years            -0.02           0         -0.02                0


m3c <- lm(log_incidents ~ feedback + training + log_empathy + 
    log_years, data = dfrms2)
[1] 151
summary(m3c)
[1] 152

Call:
lm(formula = log_incidents ~ feedback + training + log_empathy + 
    log_years, data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.27643 -0.17867  0.04144  0.23506  0.85393 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.27644    0.20878   1.324  0.18702    
feedbackfeedback  0.32813    0.05262   6.235 2.74e-09 ***
trainingtraining -0.38605    0.05291  -7.296 7.30e-12 ***
log_empathy      -0.37619    0.06490  -5.797 2.68e-08 ***
log_years        -0.19385    0.06362  -3.047  0.00263 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.3695 on 195 degrees of freedom
Multiple R-squared:  0.3555,	Adjusted R-squared:  0.3423 
F-statistic: 26.89 on 4 and 195 DF,  p-value: < 2.2e-16

crPlots(m3c)
[1] 153
par(mfrow = c(1, 1))
[1] 154
$mfrow
[1] 1 1

plot(m3c, which = 1, main = "M3c")
[1] 155
m4b <- lm(incidents ~ training + feedback + training * feedback + 
    z_empathy + mc_years, data = dfrms2)
[1] 156
summary(m4b)
[1] 157

Call:
lm(formula = incidents ~ training + feedback + training * feedback + 
    z_empathy + mc_years, data = dfrms2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.30367 -0.10365 -0.00795  0.08806  0.44359 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                        0.509636   0.020807  24.494  < 2e-16 ***
trainingtraining                  -0.203496   0.029874  -6.812 1.18e-10 ***
feedbackfeedback                   0.085558   0.029299   2.920  0.00391 ** 
z_empathy                          0.072800   0.010981   6.630 3.25e-10 ***
mc_years                          -0.015720   0.003518  -4.468 1.34e-05 ***
trainingtraining:feedbackfeedback  0.097334   0.041840   2.326  0.02103 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1462 on 194 degrees of freedom
Multiple R-squared:  0.4015,	Adjusted R-squared:  0.386 
F-statistic: 26.02 on 5 and 194 DF,  p-value: < 2.2e-16

par(mfrow = c(2, 2))
[1] 158
$mfrow
[1] 1 1

hist(m4b$residuals, main = "Histogram of m4b Residuals", xlab = "m4b Residuals")
[1] 159
qqPlot(m4b, main = "QQ-plot of m4b")
[1] 160
plot(m4b, which = 2, main = "Normal Q-Q m4b")
[1] 161
shapiro.test(resid(m4b))
[1] 162

	Shapiro-Wilk normality test

data:  resid(m4b)
W = 0.98794, p-value = 0.08817

plot(m4b, which = 3)
[1] 163
residualPlots(m4b)
[1] 164
ncvTest(m4b)
[1] 165
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 4.398557, Df = 1, p = 0.035969
par(mfrow = c(1, 1))
[1] 166
$mfrow
[1] 2 2

plot(m4b, which = 1, main = "m4b")
[1] 167
durbinWatsonTest(m4b)
[1] 168
 lag Autocorrelation D-W Statistic p-value
   1      0.09456969      1.801048   0.154
 Alternative hypothesis: rho != 0
vif(m4b)
[1] 169
         training          feedback         z_empathy          mc_years training:feedback 
         2.086826          2.007327          1.122147          1.092150          3.070068 
cd_m4b <- cooks.distance(m4b)
[1] 170
which(cd_m4b > (4/(200 - 5 - 1)))
[1] 171
 13  73  74  89 117 137 160 165 176 
 13  73  74  89 117 137 160 165 176 
plot(m4b, which = 4)
[1] 172
cookm4b <- lm(incidents ~ training + feedback + training * feedback + 
    z_empathy + mc_years, data = dfrms2[-c(13, 137, 176), ])
[1] 173
summary(cookm4b)
[1] 174

Call:
lm(formula = incidents ~ training + feedback + training * feedback + 
    z_empathy + mc_years, data = dfrms2[-c(13, 137, 176), ])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.29641 -0.09999 -0.00384  0.09683  0.33452 

Coefficients:
                                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)                        0.501859   0.019923  25.190  < 2e-16 ***
trainingtraining                  -0.197969   0.028484  -6.950 5.60e-11 ***
feedbackfeedback                   0.087979   0.028093   3.132  0.00201 ** 
z_empathy                          0.077784   0.010612   7.330 6.34e-12 ***
mc_years                          -0.017844   0.003468  -5.146 6.58e-07 ***
trainingtraining:feedbackfeedback  0.088478   0.040074   2.208  0.02845 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1386 on 191 degrees of freedom
Multiple R-squared:  0.4376,	Adjusted R-squared:  0.4228 
F-statistic: 29.72 on 5 and 191 DF,  p-value: < 2.2e-16

m4b_coef <- summary(m4b)
[1] 175
cookm4b_coef <- summary(cookm4b)
[1] 176
comparem4bs <- data.frame(round(m4b_coef$coefficients[, 1], 2), 
    round(m4b_coef$coefficients[, 4], 4), round(cookm4b_coef$coefficients[, 
        1], 2), round(cookm4b_coef$coefficients[, 4], 4))
[1] 177
colnames(comparem4bs) <- c("m4b beta", "m4b p-value", "m4b cook beta", 
    "m4b cook p-value")
[1] 178
comparem4bs

                                  m4b beta m4b p-value m4b cook beta m4b cook p-value
(Intercept)                           0.51      0.0000          0.50           0.0000
trainingtraining                     -0.20      0.0000         -0.20           0.0000
feedbackfeedback                      0.09      0.0039          0.09           0.0020
z_empathy                             0.07      0.0000          0.08           0.0000
mc_years                             -0.02      0.0000         -0.02           0.0000
trainingtraining:feedbackfeedback     0.10      0.0210          0.09           0.0284


interaction.plot(dfrms2$feedback, dfrms2$training, dfrms2$incidents)
[1] 180
if_m1bvm4b <- anova(m1b, m4b)
[1] 181
if_m1bvm4b

Analysis of Variance Table

Model 1: incidents ~ training + z_empathy + mc_years
Model 2: incidents ~ training + feedback + training * feedback + z_empathy + 
    mc_years
  Res.Df    RSS Df Sum of Sq    F    Pr(>F)    
1    196 5.1532                                
2    194 4.1482  2     1.005 23.5 7.264e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1


aic_m1bvm4b <- AIC(m1b, m4b)
[1] 183
aic_m1bvm4b

    df       AIC
m1b  5 -154.1654
m4b  7 -193.5529


bic_m1bvm4b <- BIC(m1b, m4b)
[1] 185
bic_m1bvm4b

    df       BIC
m1b  5 -137.6738
m4b  7 -170.4646


plot_model(m4b, type = "pred", terms = c("training", "feedback"))
[1] 187
NULL
