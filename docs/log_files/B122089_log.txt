

	####### B122089 R script #######

data <- read.csv("../RMS2_report_1920.csv")
[1] 1
data$incidents[data$incidents > 1] <- NA
[1] 2
data$training[data$training > 2] <- NA
[1] 3
data$feedback[data$feedback > 2] <- NA
[1] 4
data$empathy[data$empathy > 20] <- NA
[1] 5
data$years[data$years > 30] <- NA
[1] 6
summary(data)
[1] 7
    subject         incidents          training      feedback      empathy          years      
 Min.   :  1.00   Min.   :0.08333   Min.   :1.0   Min.   :1.0   Min.   : 3.00   Min.   : 1.00  
 1st Qu.: 50.75   1st Qu.:0.33333   1st Qu.:1.0   1st Qu.:1.0   1st Qu.: 9.00   1st Qu.: 6.00  
 Median :100.50   Median :0.41667   Median :1.5   Median :1.5   Median :10.00   Median : 8.00  
 Mean   :100.50   Mean   :0.47500   Mean   :1.5   Mean   :1.5   Mean   :10.18   Mean   : 8.13  
 3rd Qu.:150.25   3rd Qu.:0.58333   3rd Qu.:2.0   3rd Qu.:2.0   3rd Qu.:12.00   3rd Qu.:10.00  
 Max.   :200.00   Max.   :0.91667   Max.   :2.0   Max.   :2.0   Max.   :16.00   Max.   :19.00  
sapply(data, class)
[1] 8
  subject incidents  training  feedback   empathy     years 
"integer" "numeric" "integer" "integer" "integer" "integer" 
data$training <- as.factor(data$training)
[1] 9
data$feedback <- as.factor(data$feedback)
[1] 10
data$yearsmean <- data$years - mean(data$years)
[1] 11
data$empathymean <- data$empathy - mean(data$empathy)
[1] 12
data$empathymeanlog <- log(data$empathymean + 8)
[1] 13
data$yearsmeanlog <- log(data$yearsmean + 8)
[1] 14
m1 <- lm(data$yearsmeanlog ~ data$empathymeanlog, data = data)
[1] 15
summary(m1)
[1] 16

Call:
lm(formula = data$yearsmeanlog ~ data$empathymeanlog, data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.99621 -0.17624 -0.02148  0.19963  1.48497 

Coefficients:
                    Estimate Std. Error t value Pr(>|t|)    
(Intercept)          0.87160    0.12144   7.177  1.4e-11 ***
data$empathymeanlog  0.55946    0.05911   9.465  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.3763 on 198 degrees of freedom
Multiple R-squared:  0.3115,	Adjusted R-squared:  0.3081 
F-statistic:  89.6 on 1 and 198 DF,  p-value: < 2.2e-16

plot(data$empathymeanlog, data$yearsmeanlog, main = "Relationship between Empathy and Years of Teaching Experience", 
    xlab = "Empathy Score log", ylab = "Years of Teaching Experience log", 
    pch = 19)
[1] 17
abline(lm(data$empathymeanlog ~ data$yearsmeanlog), col = "red")
[1] 18
qqPlot(m1)
[1] 19


####################################################################################################

[1] "Error in qqPlot(m1) : could not find function \"qqPlot\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in qqPlot(m1): could not find function "qqPlot">
####################################################################################################


shapiro.test(m1$residuals)
[1] 20

	Shapiro-Wilk normality test

data:  m1$residuals
W = 0.97525, p-value = 0.001325

residualPlots(m1)
[1] 21
ncvTest(m1)
[1] 22
[1] "Error in ncvTest(m1) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m1): could not find function "ncvTest">


####################################################################################################

[1] "Error in ncvTest(m1) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m1): could not find function "ncvTest">
####################################################################################################


crPlots(m1)
[1] 23
durbinWatsonTest(m1)
[1] 24
[1] "Error in durbinWatsonTest(m1) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m1): could not find function "durbinWatsonTest">


####################################################################################################

[1] "Error in durbinWatsonTest(m1) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m1): could not find function "durbinWatsonTest">
####################################################################################################


stdzm1 <- MASS::studres(m1)
[1] 25
which(abs(stdzm1) > 2)
[1] 26
 88  89  92  94 108 116 137 154 155 163 165 200 
 88  89  92  94 108 116 137 154 155 163 165 200 
hatsm1 <- hatvalues(m1)
[1] 27
which(hatsm1 > 2 * mean(hatsm1))
[1] 28
 16  30  61  88 141 154 171 192 200 
 16  30  61  88 141 154 171 192 200 
Cooksm1 <- cooks.distance(m1)
[1] 29
which(Cooksm1 > 0.0202020202)
[1] 30
 88  89 116 137 154 163 175 200 
 88  89 116 137 154 163 175 200 
ggplot(data, aes(data$empathymean, data$yearsmean)) + geom_point() + 
    stat_smooth()
[1] 31


####################################################################################################

[1] "Error in ggplot(data, aes(data$empathymean, data$yearsmean)) : \n  could not find function \"ggplot\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ggplot(data, aes(data$empathymean, data$yearsmean)): could not find function "ggplot">
####################################################################################################


m2 <- lm(data$incidents ~ data$training + data$yearsmean + data$empathymean, 
    data = data)
[1] 32
summary(m2)
[1] 33

Call:
lm(formula = data$incidents ~ data$training + data$yearsmean + 
    data$empathymean, data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.35648 -0.12270 -0.01474  0.10105  0.53180 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.551213   0.016298  33.821  < 2e-16 ***
data$training2   -0.152427   0.023166  -6.580 4.20e-10 ***
data$yearsmean   -0.014085   0.003889  -3.622 0.000372 ***
data$empathymean  0.025396   0.004735   5.363 2.29e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1621 on 196 degrees of freedom
Multiple R-squared:  0.2565,	Adjusted R-squared:  0.2451 
F-statistic: 22.53 on 3 and 196 DF,  p-value: 1.408e-12

qqPlot(m2)
[1] 34


####################################################################################################

[1] "Error in qqPlot(m2) : could not find function \"qqPlot\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in qqPlot(m2): could not find function "qqPlot">
####################################################################################################


shapiro.test(m2$residuals)
[1] 35

	Shapiro-Wilk normality test

data:  m2$residuals
W = 0.97994, p-value = 0.005838

residualPlots(m2)
[1] 36
ncvTest(m2)
[1] 37
[1] "Error in ncvTest(m2) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m2): could not find function "ncvTest">


####################################################################################################

[1] "Error in ncvTest(m2) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m2): could not find function "ncvTest">
####################################################################################################


crPlots(m2)
[1] 38
durbinWatsonTest(m2)
[1] 39
[1] "Error in durbinWatsonTest(m2) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m2): could not find function "durbinWatsonTest">


####################################################################################################

[1] "Error in durbinWatsonTest(m2) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m2): could not find function "durbinWatsonTest">
####################################################################################################


vif(m2)
[1] 40
[1] "Error in vif(m2) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m2): could not find function "vif">


####################################################################################################

[1] "Error in vif(m2) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m2): could not find function "vif">
####################################################################################################


stdzm2 <- MASS::studres(m2)
[1] 41
which(abs(stdzm2) > 2)
[1] 42
  7  13  35  74 159 165 176 181 
  7  13  35  74 159 165 176 181 
hatsm2 <- hatvalues(m2)
[1] 43
which(hatsm2 > 2 * mean(hatsm2))
[1] 44
 61  88  89  92  94 137 141 154 163 175 200 
 61  88  89  92  94 137 141 154 163 175 200 
Cooksm2 <- cooks.distance(m2)
[1] 45
which(Cooksm2 > 0.02040816326)
[1] 46
 13  35  74 137 165 
 13  35  74 137 165 
m3 <- lm(data$incidents ~ data$feedback + data$training + data$yearsmean + 
    data$empathymean, data = data)
[1] 47
summary(m3)
[1] 48

Call:
lm(formula = data$incidents ~ data$feedback + data$training + 
    data$yearsmean + data$empathymean, data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31626 -0.10096 -0.00949  0.09165  0.46650 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.485055   0.018126  26.760  < 2e-16 ***
data$feedback2    0.133715   0.020968   6.377 1.28e-09 ***
data$training2   -0.153824   0.021128  -7.281 7.98e-12 ***
data$yearsmean   -0.015199   0.003551  -4.281 2.92e-05 ***
data$empathymean  0.027191   0.004328   6.283 2.12e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1479 on 195 degrees of freedom
Multiple R-squared:  0.3848,	Adjusted R-squared:  0.3721 
F-statistic: 30.49 on 4 and 195 DF,  p-value: < 2.2e-16

qqPlot(m3)
[1] 49


####################################################################################################

[1] "Error in qqPlot(m3) : could not find function \"qqPlot\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in qqPlot(m3): could not find function "qqPlot">
####################################################################################################


shapiro.test(m3$residuals)
[1] 50

	Shapiro-Wilk normality test

data:  m3$residuals
W = 0.98734, p-value = 0.07172

residualPlots(m3)
[1] 51
ncvTest(m3)
[1] 52
[1] "Error in ncvTest(m3) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m3): could not find function "ncvTest">


####################################################################################################

[1] "Error in ncvTest(m3) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m3): could not find function "ncvTest">
####################################################################################################


crPlots(m3)
[1] 53
durbinWatsonTest(m3)
[1] 54
[1] "Error in durbinWatsonTest(m3) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m3): could not find function "durbinWatsonTest">


####################################################################################################

[1] "Error in durbinWatsonTest(m3) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m3): could not find function "durbinWatsonTest">
####################################################################################################


vif(m3)
[1] 55
[1] "Error in vif(m3) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m3): could not find function "vif">


####################################################################################################

[1] "Error in vif(m3) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m3): could not find function "vif">
####################################################################################################


stdzm3 <- MASS::studres(m3)
[1] 56
which(abs(stdzm3) > 2)
[1] 57
 13  74 101 117 150 156 159 160 176 181 
 13  74 101 117 150 156 159 160 176 181 
hatsm3 <- hatvalues(m3)
[1] 58
which(hatsm3 > 2 * mean(hatsm3))
[1] 59
 61  88  89  92 137 141 154 175 200 
 61  88  89  92 137 141 154 175 200 
Cooksm3 <- cooks.distance(m3)
[1] 60
which(Cooksm3 > 0.02051282051)
[1] 61
 13  35  74 117 131 137 141 156 160 176 
 13  35  74 117 131 137 141 156 160 176 
m4 <- lm(data$incidents ~ data$feedback + data$training + data$yearsmean + 
    data$empathymean + data$feedback * data$training, data = data)
[1] 62
summary(m4)
[1] 63

Call:
lm(formula = data$incidents ~ data$feedback + data$training + 
    data$yearsmean + data$empathymean + data$feedback * data$training, 
    data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.30367 -0.10365 -0.00795  0.08806  0.44359 

Coefficients:
                               Estimate Std. Error t value Pr(>|t|)    
(Intercept)                    0.509636   0.020807  24.494  < 2e-16 ***
data$feedback2                 0.085558   0.029299   2.920  0.00391 ** 
data$training2                -0.203496   0.029874  -6.812 1.18e-10 ***
data$yearsmean                -0.015720   0.003518  -4.468 1.34e-05 ***
data$empathymean               0.028695   0.004328   6.630 3.25e-10 ***
data$feedback2:data$training2  0.097334   0.041840   2.326  0.02103 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1462 on 194 degrees of freedom
Multiple R-squared:  0.4015,	Adjusted R-squared:  0.386 
F-statistic: 26.02 on 5 and 194 DF,  p-value: < 2.2e-16

qqPlot(m4)
[1] 64


####################################################################################################

[1] "Error in qqPlot(m4) : could not find function \"qqPlot\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in qqPlot(m4): could not find function "qqPlot">
####################################################################################################


shapiro.test(m4$residuals)
[1] 65

	Shapiro-Wilk normality test

data:  m4$residuals
W = 0.98794, p-value = 0.08817

residualPlots(m4)
[1] 66
ncvTest(m4)
[1] 67
[1] "Error in ncvTest(m4) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m4): could not find function "ncvTest">


####################################################################################################

[1] "Error in ncvTest(m4) : could not find function \"ncvTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in ncvTest(m4): could not find function "ncvTest">
####################################################################################################


crPlots(m4)
[1] 68
durbinWatsonTest(m4)
[1] 69
[1] "Error in durbinWatsonTest(m4) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m4): could not find function "durbinWatsonTest">


####################################################################################################

[1] "Error in durbinWatsonTest(m4) : \n  could not find function \"durbinWatsonTest\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in durbinWatsonTest(m4): could not find function "durbinWatsonTest">
####################################################################################################


vif(m4)
[1] 70
[1] "Error in vif(m4) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m4): could not find function "vif">


####################################################################################################

[1] "Error in vif(m4) : could not find function \"vif\"\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in vif(m4): could not find function "vif">
####################################################################################################


stdzm4 <- MASS::studres(m4)
[1] 71
which(abs(stdzm4) > 2)
[1] 72
 13  73 117 150 156 159 160 176 181 
 13  73 117 150 156 159 160 176 181 
hatsm4 <- hatvalues(m4)
[1] 73
which(hatsm4 > 2 * mean(hatsm4))
[1] 74
 61  88  89 137 141 154 200 
 61  88  89 137 141 154 200 
Cooksm4 <- cooks.distance(m4)
[1] 75
which(Cooksm4 > 0.0206185567)
[1] 76
 13  73  74  89 117 137 160 165 176 
 13  73  74  89 117 137 160 165 176 
