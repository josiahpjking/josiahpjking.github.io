

	####### B118414 R script #######

setwd("C:/Users/Julie/Desktop")
[1] 1
install.packages("psych")
[1] 2
library(psych, quietly = T)
[1] 3
[1] "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
install.packages("pastecs")
[1] 4
library(pastecs, quietly = T)
[1] 5
 [1] "pastecs"   "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[10] "base"     
install.packages("car")
[1] 6
library(car, quietly = T)
[1] 7
 [1] "car"       "carData"   "pastecs"   "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"    
[10] "datasets"  "methods"   "base"     
install.packages("agricolae")
[1] 8
library(agricolae, quietly = T)
[1] 9
 [1] "agricolae" "car"       "carData"   "pastecs"   "psych"     "readr"     "stats"     "graphics"  "grDevices"
[10] "utils"     "datasets"  "methods"   "base"     
install.packages("interactions")
[1] 10
library(interactions, quietly = T)
[1] 11
 [1] "interactions" "agricolae"    "car"          "carData"      "pastecs"      "psych"        "readr"       
 [8] "stats"        "graphics"     "grDevices"    "utils"        "datasets"     "methods"      "base"        
StatsData <- read.csv("../RMS2_report_1920.csv")
[1] 12
str(StatsData)
[1] 13
'data.frame':	200 obs. of  6 variables:
 $ subject  : int  1 2 3 4 5 6 7 8 9 10 ...
 $ incidents: num  0.667 0.333 0.333 0.417 0.5 ...
 $ training : int  2 2 2 2 2 2 2 2 2 2 ...
 $ feedback : int  2 1 2 1 2 1 2 1 2 1 ...
 $ empathy  : int  11 10 10 9 12 11 13 14 12 12 ...
 $ years    : int  10 7 5 7 12 10 8 10 7 9 ...
NULL
summary(StatsData)
[1] 14
    subject         incidents          training      feedback      empathy          years      
 Min.   :  1.00   Min.   :0.08333   Min.   :1.0   Min.   :1.0   Min.   : 3.00   Min.   : 1.00  
 1st Qu.: 50.75   1st Qu.:0.33333   1st Qu.:1.0   1st Qu.:1.0   1st Qu.: 9.00   1st Qu.: 6.00  
 Median :100.50   Median :0.41667   Median :1.5   Median :1.5   Median :10.00   Median : 8.00  
 Mean   :100.50   Mean   :0.47500   Mean   :1.5   Mean   :1.5   Mean   :10.18   Mean   : 8.13  
 3rd Qu.:150.25   3rd Qu.:0.58333   3rd Qu.:2.0   3rd Qu.:2.0   3rd Qu.:12.00   3rd Qu.:10.00  
 Max.   :200.00   Max.   :0.91667   Max.   :2.0   Max.   :2.0   Max.   :16.00   Max.   :19.00  
StatsData$training <- as.factor(StatsData$training)
[1] 15
StatsData$feedback <- as.factor(StatsData$feedback)
[1] 16
StatsData$training <- factor(StatsData$training, labels = c("No Training", 
    "Training"))
[1] 17
StatsData$feedback <- factor(StatsData$feedback, labels = c("No Feedback", 
    "Feedback"))
[1] 18
StatsData$empathy <- StatsData$empathy - mean(StatsData$empathy)
[1] 19
str(StatsData)
[1] 20
'data.frame':	200 obs. of  6 variables:
 $ subject  : int  1 2 3 4 5 6 7 8 9 10 ...
 $ incidents: num  0.667 0.333 0.333 0.417 0.5 ...
 $ training : Factor w/ 2 levels "No Training",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ feedback : Factor w/ 2 levels "No Feedback",..: 2 1 2 1 2 1 2 1 2 1 ...
 $ empathy  : num  0.825 -0.175 -0.175 -1.175 1.825 ...
 $ years    : int  10 7 5 7 12 10 8 10 7 9 ...
NULL
summary(StatsData)
[1] 21
    subject         incidents              training          feedback      empathy           years      
 Min.   :  1.00   Min.   :0.08333   No Training:100   No Feedback:100   Min.   :-7.175   Min.   : 1.00  
 1st Qu.: 50.75   1st Qu.:0.33333   Training   :100   Feedback   :100   1st Qu.:-1.175   1st Qu.: 6.00  
 Median :100.50   Median :0.41667                                       Median :-0.175   Median : 8.00  
 Mean   :100.50   Mean   :0.47500                                       Mean   : 0.000   Mean   : 8.13  
 3rd Qu.:150.25   3rd Qu.:0.58333                                       3rd Qu.: 1.825   3rd Qu.:10.00  
 Max.   :200.00   Max.   :0.91667                                       Max.   : 5.825   Max.   :19.00  
lmoverall <- lm(incidents ~ training + years + empathy + feedback, 
    data = StatsData)
[1] 22
summary(lmoverall)
[1] 23

Call:
lm(formula = incidents ~ training + years + empathy + feedback, 
    data = StatsData)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31626 -0.10096 -0.00949  0.09165  0.46650 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.608620   0.034515  17.634  < 2e-16 ***
trainingTraining -0.153824   0.021128  -7.281 7.98e-12 ***
years            -0.015199   0.003551  -4.281 2.92e-05 ***
empathy           0.027191   0.004328   6.283 2.12e-09 ***
feedbackFeedback  0.133715   0.020968   6.377 1.28e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1479 on 195 degrees of freedom
Multiple R-squared:  0.3848,	Adjusted R-squared:  0.3721 
F-statistic: 30.49 on 4 and 195 DF,  p-value: < 2.2e-16

plot(lmoverall, which = 4)
[1] 24
lmoverallclean <- lm(incidents ~ training + years + empathy + 
    feedback, data = StatsData[-c(13, 137, 176), ])
[1] 25
summary(lmoverallclean)
[1] 26

Call:
lm(formula = incidents ~ training + years + empathy + feedback, 
    data = StatsData[-c(13, 137, 176), ])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31479 -0.10102 -0.00300  0.09041  0.35676 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.619020   0.033412  18.527  < 2e-16 ***
trainingTraining -0.153003   0.020113  -7.607 1.22e-12 ***
years            -0.017169   0.003489  -4.921 1.85e-06 ***
empathy           0.029143   0.004167   6.993 4.34e-11 ***
feedbackFeedback  0.132020   0.019981   6.607 3.76e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.14 on 192 degrees of freedom
Multiple R-squared:  0.4232,	Adjusted R-squared:  0.4112 
F-statistic: 35.22 on 4 and 192 DF,  p-value: < 2.2e-16

hats <- hatvalues(lmoverall)
[1] 27
head(hats, 20)
[1] 28
         1          2          3          4          5          6          7          8          9         10 
0.01712163 0.01549576 0.02001541 0.01701625 0.02394476 0.01751286 0.02125280 0.02488761 0.01874782 0.01688360 
        11         12         13         14         15         16         17         18         19         20 
0.01833535 0.02484967 0.01655041 0.01759398 0.01655041 0.04465575 0.03320873 0.01701625 0.02001541 0.02623618 
which(hats > 2 * mean(hats))
[1] 29
 61  88  89  92 137 141 154 175 200 
 61  88  89  92 137 141 154 175 200 
lmleverage <- lm(incidents ~ training + years + empathy + feedback, 
    data = StatsData[-c(61, 88, 89, 92, 137, 141, 154, 175, 200)])
[1] 30
summary(lmleverage)
[1] 31

Call:
lm(formula = incidents ~ training + years + empathy + feedback, 
    data = StatsData[-c(61, 88, 89, 92, 137, 141, 154, 175, 200)])

Residuals:
     Min       1Q   Median       3Q      Max 
-0.31626 -0.10096 -0.00949  0.09165  0.46650 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.608620   0.034515  17.634  < 2e-16 ***
trainingTraining -0.153824   0.021128  -7.281 7.98e-12 ***
years            -0.015199   0.003551  -4.281 2.92e-05 ***
empathy           0.027191   0.004328   6.283 2.12e-09 ***
feedbackFeedback  0.133715   0.020968   6.377 1.28e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1479 on 195 degrees of freedom
Multiple R-squared:  0.3848,	Adjusted R-squared:  0.3721 
F-statistic: 30.49 on 4 and 195 DF,  p-value: < 2.2e-16

Question1model <- lm(empathy ~ years, data = StatsData)
[1] 32
summary(Question1model)
[1] 33

Call:
lm(formula = empathy ~ years, data = StatsData)

Residuals:
    Min      1Q  Median      3Q     Max 
-7.5399 -1.5160  0.0708  1.6357  5.8533 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) -1.76875    0.49085  -3.603 0.000397 ***
years        0.21756    0.05648   3.852 0.000158 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.453 on 198 degrees of freedom
Multiple R-squared:  0.06972,	Adjusted R-squared:  0.06502 
F-statistic: 14.84 on 1 and 198 DF,  p-value: 0.0001582

ncvTest(Question1model)
[1] 34
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.9815033, Df = 1, p = 0.32183
residualPlots(Question1model)
[1] 35
shapiro.test(resid(Question1model))
[1] 36

	Shapiro-Wilk normality test

data:  resid(Question1model)
W = 0.98911, p-value = 0.1321

qqPlot(Question1model)
[1] 37
durbinWatsonTest(Question1model)
[1] 38
 lag Autocorrelation D-W Statistic p-value
   1       0.1017162      1.769879   0.112
 Alternative hypothesis: rho != 0
plot(StatsData$years, StatsData$empathy, xlab = "Years", ylab = "Empathy", 
    main = "Empathy and Experience")
[1] 39
abline(lm(empathy ~ years, data = StatsData))
[1] 40
lines(lowess(StatsData$years, StatsData$empathy))
[1] 41
years2 <- StatsData$years^2
[1] 42
question1quadratic <- lm(empathy ~ years + years2, data = StatsData)
[1] 43
summary(question1quadratic)
[1] 44

Call:
lm(formula = empathy ~ years + years2, data = StatsData)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5069 -1.4011 -0.0835  1.1707  6.0622 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) -8.988644   0.791848  -11.35   <2e-16 ***
years        2.068508   0.181845   11.38   <2e-16 ***
years2      -0.103645   0.009861  -10.51   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.969 on 197 degrees of freedom
Multiple R-squared:  0.404,	Adjusted R-squared:  0.3979 
F-statistic: 66.75 on 2 and 197 DF,  p-value: < 2.2e-16

ncvTest(question1quadratic)
[1] 45
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.5107658, Df = 1, p = 0.47481
residualPlots(question1quadratic)
[1] 46
shapiro.test(resid(question1quadratic))
[1] 47

	Shapiro-Wilk normality test

data:  resid(question1quadratic)
W = 0.9941, p-value = 0.6155

qqPlot(question1quadratic)
[1] 48
durbinWatsonTest(question1quadratic)
[1] 49
 lag Autocorrelation D-W Statistic p-value
   1      0.01288905      1.973855   0.854
 Alternative hypothesis: rho != 0
vif(question1quadratic)
[1] 50
  years  years2 
16.0978 16.0978 
plot(StatsData$years, StatsData$empathy, xlab = "Years", ylab = "Empathy", 
    main = "Quadratic Model Fit")
[1] 51
points(StatsData$years, fitted(question1quadratic), col = "green", 
    pch = 20)
[1] 52
NULL
lines(sort(StatsData$years), fitted(question1quadratic)[order(StatsData$years)], 
    col = "red", type = "b")
[1] 53
Question2model <- lm(incidents ~ training + empathy + years, 
    data = StatsData)
[1] 54
summary(Question2model)
[1] 55

Call:
lm(formula = incidents ~ training + empathy + years, data = StatsData)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.35648 -0.12270 -0.01474  0.10105  0.53180 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.665721   0.036551  18.214  < 2e-16 ***
trainingTraining -0.152427   0.023166  -6.580 4.20e-10 ***
empathy           0.025396   0.004735   5.363 2.29e-07 ***
years            -0.014085   0.003889  -3.622 0.000372 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1621 on 196 degrees of freedom
Multiple R-squared:  0.2565,	Adjusted R-squared:  0.2451 
F-statistic: 22.53 on 3 and 196 DF,  p-value: 1.408e-12

ncvTest(Question2model)
[1] 56
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.0293323, Df = 1, p = 0.86401
residualPlots(Question2model)
[1] 57
shapiro.test(resid(Question2model))
[1] 58

	Shapiro-Wilk normality test

data:  resid(Question2model)
W = 0.97994, p-value = 0.005838

qqPlot(Question2model)
[1] 59
durbinWatsonTest(Question2model)
[1] 60
 lag Autocorrelation D-W Statistic p-value
   1      -0.1072849      2.199897   0.188
 Alternative hypothesis: rho != 0
vif(Question2model)
[1] 61
training  empathy    years 
1.020633 1.092467 1.085089 
plot(Question2model, which = 1)
[1] 62
plot(StatsData$training, StatsData$incidents, xlab = "Training", 
    ylab = "Intervention")
[1] 63
log.incidents <- log(StatsData$incidents + (-1 * min(StatsData$incidents) + 
    1))
[1] 64
summary(log.incidents)
[1] 65
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.2231  0.2877  0.3216  0.4055  0.6061 
Question2logmodel <- lm(log.incidents ~ training + empathy + 
    years, data = StatsData)
[1] 66
summary(Question2logmodel)
[1] 67

Call:
lm(formula = log.incidents ~ training + empathy + years, data = StatsData)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.27676 -0.08678 -0.00271  0.07438  0.35035 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.460852   0.026028  17.706  < 2e-16 ***
trainingTraining -0.111288   0.016497  -6.746 1.67e-10 ***
empathy           0.018550   0.003372   5.501 1.17e-07 ***
years            -0.010283   0.002769  -3.713 0.000266 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1155 on 196 degrees of freedom
Multiple R-squared:  0.2661,	Adjusted R-squared:  0.2549 
F-statistic: 23.69 on 3 and 196 DF,  p-value: 3.963e-13

ncvTest(Question2logmodel)
[1] 68
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 1.036059, Df = 1, p = 0.30874
residualPlots(Question2logmodel)
[1] 69
shapiro.test(resid(Question2logmodel))
[1] 70

	Shapiro-Wilk normality test

data:  resid(Question2logmodel)
W = 0.9905, p-value = 0.2109

qqPlot(Question2logmodel)
[1] 71
durbinWatsonTest(Question2logmodel)
[1] 72
 lag Autocorrelation D-W Statistic p-value
   1       -0.116516      2.217742   0.148
 Alternative hypothesis: rho != 0
vif(Question2logmodel)
[1] 73
training  empathy    years 
1.020633 1.092467 1.085089 
plot(Question2logmodel, which = 1)
[1] 74
plot(StatsData$training, log.incidents, xlab = "Training", ylab = "Intervention", 
    main = "Training on Intervention")
[1] 75
Question3model <- lm(log.incidents ~ feedback + empathy + years, 
    data = StatsData)
[1] 76
summary(Question3model)
[1] 77

Call:
lm(formula = log.incidents ~ feedback + empathy + years, data = StatsData)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.27663 -0.07576 -0.00237  0.08302  0.35261 

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)       0.349057   0.025597  13.637  < 2e-16 ***
feedbackFeedback  0.095615   0.016841   5.677 4.87e-08 ***
empathy           0.016926   0.003448   4.909 1.92e-06 ***
years            -0.009257   0.002839  -3.261  0.00131 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1188 on 196 degrees of freedom
Multiple R-squared:  0.2235,	Adjusted R-squared:  0.2116 
F-statistic:  18.8 on 3 and 196 DF,  p-value: 9.283e-11

ncvTest(Question3model)
[1] 78
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.6746094, Df = 1, p = 0.41145
residualPlots(Question3model)
[1] 79
shapiro.test(resid(Question3model))
[1] 80

	Shapiro-Wilk normality test

data:  resid(Question3model)
W = 0.99572, p-value = 0.8487

qqPlot(Question3model)
[1] 81
durbinWatsonTest(Question3model)
[1] 82
 lag Autocorrelation D-W Statistic p-value
   1       0.2794347      1.431864       0
 Alternative hypothesis: rho != 0
vif(Question3model)
[1] 83
feedback  empathy    years 
1.005211 1.079397 1.077467 
plot(StatsData$feedback, log.incidents, xlab = "Training", ylab = "Intervention", 
    main = "Feedback on Intervention")
[1] 84
AIC(Question2logmodel, Question3model)
[1] 85
                  df       AIC
Question2logmodel  5 -289.9740
Question3model     5 -278.6673
BIC(Question2logmodel, Question3model)
[1] 86
                  df       BIC
Question2logmodel  5 -273.4824
Question3model     5 -262.1757
Question5model <- lm(log.incidents ~ training + feedback + training * 
    feedback, data = StatsData)
[1] 87
summary(Question5model)
[1] 88

Call:
lm(formula = log.incidents ~ training + feedback + training * 
    feedback, data = StatsData)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.32886 -0.07357  0.00614  0.07068  0.27727 

Coefficients:
                                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)                        0.33701    0.01649  20.442  < 2e-16 ***
trainingTraining                  -0.12001    0.02332  -5.147  6.4e-07 ***
feedbackFeedback                   0.06653    0.02332   2.853  0.00479 ** 
trainingTraining:feedbackFeedback  0.04534    0.03297   1.375  0.17072    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.1166 on 196 degrees of freedom
Multiple R-squared:  0.252,	Adjusted R-squared:  0.2405 
F-statistic: 22.01 on 3 and 196 DF,  p-value: 2.515e-12

ncvTest(Question5model)
[1] 89
Non-constant Variance Score Test 
Variance formula: ~ fitted.values 
Chisquare = 0.04011943, Df = 1, p = 0.84125
residualPlots(Question5model)
[1] 90
shapiro.test(resid(Question5model))
[1] 91

	Shapiro-Wilk normality test

data:  resid(Question5model)
W = 0.98649, p-value = 0.05345

qqPlot(Question5model)
[1] 92
durbinWatsonTest(Question5model)
[1] 93
 lag Autocorrelation D-W Statistic p-value
   1       0.1133615      1.766819   0.124
 Alternative hypothesis: rho != 0
vif(Question5model)
[1] 94
         training          feedback training:feedback 
                2                 2                 3 
interaction.plot(StatsData$training, StatsData$feedback, log.incidents, 
    xlab = "Training", ylab = "Incidents", main = "Interaction between Training and Feedback")
[1] 95
cat_plot(Question5model, pred = training, modx = feedback, plot.points = TRUE, 
    main.title = "Interaction Plot between Training and Feedback")
[1] 96
