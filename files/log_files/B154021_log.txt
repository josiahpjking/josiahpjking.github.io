

	####### B154021 R script #######

library(psych, quietly = T)
[1] 1
[1] "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
library(ggplot2, quietly = T)
[1] 2
 [1] "ggplot2"   "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[10] "base"     
install.packages("car")
[1] 3
library(car, quietly = T)
[1] 4
 [1] "car"       "carData"   "ggplot2"   "psych"     "readr"     "stats"     "graphics"  "grDevices" "utils"    
[10] "datasets"  "methods"   "base"     
load(url("https://edin.ac/2QCZNVu"))
[1] 5
[1] "drinkdriving" "officer_inc" 
describe(drinkdriving)
[1] 6
               vars   n mean    sd median trimmed   mad min  max range skew kurtosis   se
age               1 228   46 33.35   40.5   42.34 18.53  14  297   283  5.5    38.49 2.21
nighttime*        2 250  NaN    NA     NA     NaN    NA Inf -Inf  -Inf   NA       NA   NA
prior_offence*    3 250  NaN    NA     NA     NaN    NA Inf -Inf  -Inf   NA       NA   NA
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]
table(drinkdriving$age)
[1] 7

14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 
 1  5  2  3  1  2  3  6  2  5  8  3  2  2  5  4  4  4  6  5  9  8  3  4  2 10  5  6  5  3  2  3  4  5  2  3  3 
51 52 53 54 55 56 57 58 59 60 61 62 63 
 3  6  3  5  4  3  4  4  1  5  3  3  2 
 [ reached getOption("max.print") -- omitted 15 entries ]
drinkdriving$age[drinkdriving$age > 100] <- NA
[1] 8
drinkdriving$age <- as.integer(drinkdriving$age)
[1] 9
table(drinkdriving$nighttime)
[1] 10

18:25  2:05   day night 
    1     2    78   169 
drinkdriving$nighttime[drinkdriving$nighttime == "18:25"] <- "night"
[1] 11
drinkdriving$nighttime[drinkdriving$nighttime == "2:05"] <- "night"
[1] 12
drinkdriving$nighttime <- factor(drinkdriving$nighttime)
[1] 13
table(drinkdriving$outcome)
[1] 14

   fine    Fine    FINE warning Warning WARNING 
    191       2       9      43       2       3 
drinkdriving$outcome[drinkdriving$outcome == "Fine"] <- "fine"
[1] 15
drinkdriving$outcome[drinkdriving$outcome == "FINE"] <- "fine"
[1] 16
drinkdriving$outcome[drinkdriving$outcome == "Warning"] <- "warning"
[1] 17
drinkdriving$outcome[drinkdriving$outcome == "WARNING"] <- "warning"
[1] 18
drinkdriving$outcome <- tolower(drinkdriving$outcome)
[1] 19
drinkdriving$outcome <- factor(drinkdriving$outcome)
[1] 20
m1 <- lm(bac ~ age, data = drinkdriving)
[1] 21
m1


Call:
lm(formula = bac ~ age, data = drinkdriving)

Coefficients:
(Intercept)          age  
    29.2945      -0.1435  



par(mfrow = c(2, 2))
[1] 23
$mfrow
[1] 1 1

plot(m1)
[1] 24
summary(m1)
[1] 25

Call:
lm(formula = bac ~ age, data = drinkdriving)

Residuals:
    Min      1Q  Median      3Q     Max 
-15.719  -4.516  -0.861   3.849  42.785 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 29.29455    1.25564  23.330  < 2e-16 ***
age         -0.14353    0.02741  -5.236 3.86e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.82 on 218 degrees of freedom
  (30 observations deleted due to missingness)
Multiple R-squared:  0.1117,	Adjusted R-squared:  0.1076 
F-statistic: 27.41 on 1 and 218 DF,  p-value: 3.863e-07

a <- data.frame(age = 50)
[1] 26
predict(m1, a)
[1] 27
       1 
22.11824 
par(mfrow = c(1, 2))
[1] 28
$mfrow
[1] 2 2

hist(resid(m1), main = NULL)
[1] 29
qqnorm(resid(m1), main = NULL)
[1] 30
$x
 [1] -1.007621166 -0.428644689  1.472414089 -0.131405491  1.294610740 -0.786084163  0.639147053  0.755415026
 [9] -0.005696913  0.653186017  0.597760126  0.570731271 -1.823803278  1.086466335 -0.466428115  0.786084163
[17] -0.517875045  0.988868932 -0.119921346  0.154427430 -0.271035620 -0.899884315 -0.224038594  0.952370547
[25]  0.504889622 -0.051294427 -0.970458137 -1.321413172 -2.466702404  0.142906992  0.342707949  0.740344626
[33] -1.107259340 -0.952370547  0.934589291  1.107259340 -0.212370265  0.247468774  1.543426728  0.584192348
[41]  0.189118426 -0.403794779 -0.416187607  0.259234199 -0.934589291  0.544113114  0.165968400  1.172717551
[49] -0.235737507  0.849767170
 [ reached getOption("max.print") -- omitted 170 entries ]

$y
          1           2           3           4           5           6           7           8           9 
 -5.9832888  -3.1414135   8.9488449  -1.4989458   8.1102827  -5.0004319   3.7082761   4.5362633  -0.9075685 
         10          11          12          13          14          15          16          18          19 
  3.7363956   3.2152472   3.0477649 -10.0038286   6.5050648  -3.3154447   4.6696074  -3.5090222   5.6547746 
         20          21          23          24          25          26          27          28          29 
 -1.4930209   0.7459390  -2.2923230  -5.3314044  -1.9857760   5.5554306   2.8384417  -1.1441820  -5.7486229 
         30          31          32          33          34          35          36          37          38 
 -8.0040993 -15.3735476   0.7326933   1.9454088   4.1703043  -6.6390634  -5.7058936   5.5359896   6.6637848 
         39          40          41          42          43          44          45          46          47 
 -1.9499121   1.4670418   9.1979351   3.1347773   0.8120467  -3.0949423  -3.1261110   1.5363665  -5.6939180 
         48          49          50          52          53 
  2.9244695   0.7527462   7.2149613  -1.9863932   4.9609531 
 [ reached getOption("max.print") -- omitted 170 entries ]

qqline(resid(m1), col = "red")
[1] 31
m2 <- lm(bac ~ age + nighttime + speed, data = drinkdriving)
[1] 32
summary(m2)
[1] 33

Call:
lm(formula = bac ~ age + nighttime + speed, data = drinkdriving)

Residuals:
    Min      1Q  Median      3Q     Max 
-13.291  -4.650   0.136   3.971  33.088 

Coefficients:
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)    14.15205    2.74426   5.157 5.67e-07 ***
age            -0.03148    0.03233  -0.974    0.331    
nighttimenight  3.84615    0.90937   4.229 3.46e-05 ***
speed           0.19824    0.03853   5.145 6.00e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.258 on 216 degrees of freedom
  (30 observations deleted due to missingness)
Multiple R-squared:  0.2587,	Adjusted R-squared:  0.2484 
F-statistic: 25.13 on 3 and 216 DF,  p-value: 5.5e-14

par(mfrow = c(2, 2))
[1] 34
$mfrow
[1] 1 2

plot(m2)
[1] 35
m2.1 <- lm(bac ~ nighttime + speed, data = drinkdriving)
[1] 36
summary(m2.1)
[1] 37

Call:
lm(formula = bac ~ nighttime + speed, data = drinkdriving)

Residuals:
     Min       1Q   Median       3Q      Max 
-16.9381  -4.3410   0.1887   4.0262  30.8414 

Coefficients:
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)     10.7846     1.2621   8.545 1.46e-15 ***
nighttimenight   4.0778     0.8538   4.776 3.10e-06 ***
speed            0.2476     0.0267   9.272  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.193 on 242 degrees of freedom
  (5 observations deleted due to missingness)
Multiple R-squared:  0.3211,	Adjusted R-squared:  0.3155 
F-statistic: 57.23 on 2 and 242 DF,  p-value: < 2.2e-16

bygroup = describeBy(drinkdriving$speed, drinkdriving$nighttime)
[1] 38
as.data.frame(bygroup$day)
[1] 39
   vars  n     mean       sd   median  trimmed      mad      min     max    range     skew kurtosis      se
X1    1 78 39.30514 14.43278 39.01721 38.65994 10.84315 12.81285 120.337 107.5241 2.059743 10.68079 1.63419
as.data.frame(bygroup$night)
[1] 40
   vars   n     mean     sd   median  trimmed      mad min      max    range       skew kurtosis       se
X1    1 172 41.02205 15.139 41.27876 41.15457 13.74233   0 81.02814 81.02814 -0.1251629 0.101274 1.154338
boxplot(drinkdriving$speed ~ drinkdriving$nighttime, main = "boxplot of test means", 
    xlab = "time", ylab = "speed")
[1] 41
speedplot <- ggplot(data = na.omit(drinkdriving), aes(x = nighttime, 
    y = speed))
[1] 42
speedplot + geom_boxplot()
[1] 43
qqnorm(y = drinkdriving$speed)
[1] 44
$x
 [1]  0.55338472  0.22754498  0.48454378 -1.60724789 -2.32634787  0.07526986 -2.51214433 -0.43991317  1.60724789
[10] -2.19728638  0.77896556  0.51865693  0.39614237 -0.38532047  0.38532047  0.13577393  1.36580556 -0.12566135
[19]  0.32127764 -0.51865693  1.82500682  1.39174378 -0.97009328  0.75208491 -0.34246630  0.67448975  0.28975981
[28] -0.41792767 -0.25852728 -1.14550506 -1.77438191 -1.53819886  0.04513463 -0.28975981  1.16504692 -0.71275076
[37]  0.37454350  0.10547362  0.98627130  0.45098550 -1.24808481  0.95416525  0.11556160 -0.10547362  0.08532879
[46] -0.61281299  1.50626172 -0.07526986 -2.01409081  1.64485363
 [ reached getOption("max.print") -- omitted 200 entries ]

$y
 [1] 47.957110 43.826353 47.260707 17.221097  1.945818 41.399468  1.012149 34.377506 63.748159  2.533468
[11] 50.049472 47.658553 46.209515 35.044348 45.911152 41.971790 59.500756 38.544314 45.294085 33.660408
[21] 66.359756 59.538043 26.205563 49.692191 35.759413 48.880880 44.464566 34.639220 36.609294 24.917257
[31] 13.069805 19.008994 41.009485 36.335035 56.428161 30.141277 45.716490 41.609061 53.768251 46.424053
[41] 23.599427 52.982425 41.674665 38.867482 41.537199 32.599695 61.109335 39.685430 12.246206 64.659834
 [ reached getOption("max.print") -- omitted 200 entries ]

shapiro.test(drinkdriving$speed)
[1] 45

	Shapiro-Wilk normality test

data:  drinkdriving$speed
W = 0.97176, p-value = 7.225e-05

leveneTest(drinkdriving$speed ~ drinkdriving$nighttime)
[1] 46
Levene's Test for Homogeneity of Variance (center = median)
       Df F value Pr(>F)
group   1  2.5609 0.1108
      248               
q2_3 = t.test(formula = speed ~ nighttime, data = drinkdriving, 
    var.equal = T)
[1] 47
q2_3


	Two Sample t-test

data:  speed by nighttime
t = -0.8428, df = 248, p-value = 0.4002
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -5.729232  2.295420
sample estimates:
  mean in group day mean in group night 
           39.30514            41.02205 



drinkdriving$isFine <- ifelse(drinkdriving$outcome == "fine", 
    1, 0)
[1] 49
drinkdriving$isnight <- ifelse(drinkdriving$nighttime == "night", 
    1, 0)
[1] 50
m3 <- glm(isFine ~ speed + bac + age + isnight, data = drinkdriving, 
    family = binomial)
[1] 51
summary(m3)
[1] 52

Call:
glm(formula = isFine ~ speed + bac + age + isnight, family = binomial, 
    data = drinkdriving)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.5357   0.0312   0.1510   0.3674   2.3290  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept) -4.82142    2.18300  -2.209 0.027201 *  
speed        0.13780    0.03365   4.095 4.23e-05 ***
bac          0.19513    0.05175   3.770 0.000163 ***
age         -0.04621    0.02018  -2.290 0.022021 *  
isnight     -0.09230    0.55790  -0.165 0.868592    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 217.38  on 219  degrees of freedom
Residual deviance: 106.28  on 215  degrees of freedom
  (30 observations deleted due to missingness)
AIC: 116.28

Number of Fisher Scoring iterations: 7

exp(0.1378)
[1] 53
[1] 1.147746
m3.fit <- ifelse(m3$fitted.values > 0.5, "fine", "warning")
[1] 54
table(pred = m3.fit, true = m3$data$outcome)
[1] 55
[1] "Error in table(pred = m3.fit, true = m3$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m3.fit, true = m3$data$outcome): all arguments must have the same length>


####################################################################################################

[1] "Error in table(pred = m3.fit, true = m3$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m3.fit, true = m3$data$outcome): all arguments must have the same length>
####################################################################################################


drinkdriving$prior_offence_drink <- NA
[1] 56
drinkdriving$prior_offence_drink[drinkdriving$prior_offence != 
    "N"] <- 0
[1] 57
drinkdriving$prior_offence_drink[grep("DR50", drinkdriving$prior_offence)] <- 1
[1] 58
m4 <- glm(isFine ~ prior_offence_drink + speed + bac, data = drinkdriving, 
    family = binomial)
[1] 59
summary(m4)
[1] 60

Call:
glm(formula = isFine ~ prior_offence_drink + speed + bac, family = binomial, 
    data = drinkdriving)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.2568   0.2433   0.3601   0.5354   1.4805  

Coefficients:
                    Estimate Std. Error z value Pr(>|z|)  
(Intercept)         -2.31305    1.39595  -1.657   0.0975 .
prior_offence_drink  1.77967    0.75819   2.347   0.0189 *
speed                0.03918    0.03579   1.095   0.2736  
bac                  0.06394    0.06350   1.007   0.3140  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 58.352  on 62  degrees of freedom
Residual deviance: 46.397  on 59  degrees of freedom
  (187 observations deleted due to missingness)
AIC: 54.397

Number of Fisher Scoring iterations: 5

m4.fit <- ifelse(m4$fitted.values > 0.5, "fine", "warning")
[1] 61
table(pred = m4.fit, true = m4$data$outcome)
[1] 62
[1] "Error in table(pred = m4.fit, true = m4$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m4.fit, true = m4$data$outcome): all arguments must have the same length>


####################################################################################################

[1] "Error in table(pred = m4.fit, true = m4$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m4.fit, true = m4$data$outcome): all arguments must have the same length>
####################################################################################################


drinkdriving$prior_offence_whether <- 1
[1] 63
drinkdriving$prior_offence_whether[drinkdriving$prior_offence == 
    "N"] <- 0
[1] 64
m5 <- glm(isFine ~ speed + bac + prior_offence_whether, data = drinkdriving, 
    family = binomial)
[1] 65
summary(m5)
[1] 66

Call:
glm(formula = isFine ~ speed + bac + prior_offence_whether, family = binomial, 
    data = drinkdriving)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-4.1134   0.0451   0.1823   0.4495   1.8862  

Coefficients:
                      Estimate Std. Error z value Pr(>|z|)    
(Intercept)           -7.19307    1.24992  -5.755 8.67e-09 ***
speed                  0.14639    0.02578   5.679 1.36e-08 ***
bac                    0.17259    0.04113   4.196 2.71e-05 ***
prior_offence_whether  0.19753    0.53407   0.370    0.711    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 239.55  on 244  degrees of freedom
Residual deviance: 129.99  on 241  degrees of freedom
  (5 observations deleted due to missingness)
AIC: 137.99

Number of Fisher Scoring iterations: 7

m5.fit <- ifelse(m5$fitted.values > 0.5, "fine", "warning")
[1] 67
table(pred = m5.fit, true = m5$data$outcome)
[1] 68
[1] "Error in table(pred = m5.fit, true = m5$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m5.fit, true = m5$data$outcome): all arguments must have the same length>


####################################################################################################

[1] "Error in table(pred = m5.fit, true = m5$data$outcome) : \n  all arguments must have the same length\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in table(pred = m5.fit, true = m5$data$outcome): all arguments must have the same length>
####################################################################################################


m6 <- glm(isFine ~ age + nighttime + speed + bac + prior_offence, 
    data = drinkdriving, family = binomial)
[1] 69
df <- data.frame(age = seq(from = 17, to = 90, by = 1), speed = 30, 
    bac = 0, nighttime = "day", prior_offence = "N")
[1] 70
df$model_prediction <- predict(m6, newdata = df, type = "response")
[1] 71
df$model_prediction
[1] 72
 [1] 0.4219113234 0.3887012900 0.3564932934 0.3255328764 0.2960243767 0.2681273682 0.2419557637 0.2175792853
 [9] 0.1950268422 0.1742912752 0.1553349199 0.1380954898 0.1224918724 0.1084295322 0.0958053230 0.0845115998
[17] 0.0744395993 0.0654821100 0.0575354922 0.0505011266 0.0442863790 0.0388051714 0.0339782395 0.0297331513
[25] 0.0260041486 0.0227318643 0.0198629570 0.0173496963 0.0151495233 0.0132246066 0.0115414060 0.0100702533
[33] 0.0087849580 0.0076624388 0.0066823852 0.0058269480 0.0050804584 0.0044291754 0.0038610589 0.0033655665
[41] 0.0029334738 0.0025567135 0.0022282343 0.0019418750 0.0016922544 0.0014746742 0.0012850332 0.0011197524
[49] 0.0009757092 0.0008501797
 [ reached getOption("max.print") -- omitted 24 entries ]
plot(df$age, df$model_prediction, type = "l", main = "The Predicted Probabilities Vs Age", 
    xlab = "Age", ylab = "Probabilities")
[1] 73
drink <- merge(x = drinkdriving, y = officer_inc, by = "incident_id")
[1] 74
ggplot(data = drink, aes(x = officer, y = age, fill = outcome)) + 
    geom_boxplot() + theme_bw() + labs(title = "Boxplot of age Vs officer By outcome")
[1] 75
m7 <- glm(isFine ~ age:officer, data = drink, family = binomial)
[1] 76
summary(m7)
[1] 77

Call:
glm(formula = isFine ~ age:officer, family = binomial, data = drink)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.0751   0.1464   0.2951   0.5115   2.0979  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)    6.41424    0.87681   7.315 2.57e-13 ***
age:officerAS -0.10653    0.01643  -6.485 8.88e-11 ***
age:officerIT -0.09881    0.01717  -5.756 8.62e-09 ***
age:officerNP -0.09418    0.01659  -5.678 1.37e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 222.38  on 224  degrees of freedom
Residual deviance: 152.58  on 221  degrees of freedom
  (25 observations deleted due to missingness)
AIC: 160.58

Number of Fisher Scoring iterations: 6

