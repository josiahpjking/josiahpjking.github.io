

	####### B126430 R script #######

library(ggplot2, quietly = T)
[1] 1
[1] "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
library(psych, quietly = T)
[1] 2
 [1] "psych"     "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
load(url("https://edin.ac/2QCZNVu"))
[1] 3
[1] "drinkdriving" "officer_inc" 
head(drinkdriving)
[1] 4
# A tibble: 6 x 7
    age nighttime prior_offence speed   bac outcome incident_id
  <dbl> <chr>     <chr>         <dbl> <dbl> <chr>   <chr>      
1    39 night     N             48.0   17.7 fine    inc_1      
2    28 day       N             43.8   22.1 fine    inc_2      
3    38 night     DR50          47.3   32.8 fine    inc_3      
4    51 night     N             17.2   20.5 warning inc_4      
5    56 night     N              1.95  29.4 warning inc_5      
6    36 day       N             41.4   19.1 fine    inc_6      
describe(drinkdriving)
[1] 5
               vars   n mean    sd median trimmed   mad min  max range skew kurtosis   se
age               1 228   46 33.35   40.5   42.34 18.53  14  297   283  5.5    38.49 2.21
nighttime*        2 250  NaN    NA     NA     NaN    NA Inf -Inf  -Inf   NA       NA   NA
prior_offence*    3 250  NaN    NA     NA     NaN    NA Inf -Inf  -Inf   NA       NA   NA
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]
clean_drinkdriving <- drinkdriving
[1] 6
class(clean_drinkdriving$age)
[1] 7
[1] "numeric"
clean_drinkdriving$age[clean_drinkdriving$age > 90] <- NA
[1] 8
boxplot(clean_drinkdriving$age, main = "Driver age data", ylab = "Age")
[1] 9
class(clean_drinkdriving$nighttime)
[1] 10
[1] "character"
table(clean_drinkdriving$nighttime)
[1] 11

18:25  2:05   day night 
    1     2    78   169 
clean_drinkdriving$nighttime[clean_drinkdriving$nighttime != 
    "day" & clean_drinkdriving$nighttime != "night"] <- NA
[1] 12
clean_drinkdriving$nighttime <- factor(clean_drinkdriving$nighttime, 
    ordered = TRUE, levels = c("day", "night"))
[1] 13
levels(clean_drinkdriving$nighttime)
[1] 14
[1] "day"   "night"
class(clean_drinkdriving$prior_offence)
[1] 15
[1] "character"
table(clean_drinkdriving$prior_offence)
[1] 16

          CD10           CD60 CD60,CD10,DR80      CD60,CD60           DD20           DR50           DR80              N           PL10 
             2              1              1              1              4             43              4            185              2 
          SP50           SP60           TS70      TS70,DR50 
             2              1              3              1 
class(clean_drinkdriving$speed)
[1] 17
[1] "numeric"
boxplot(clean_drinkdriving$speed, ylab = "Speed (mph)", main = "Speed data distribution")
[1] 18
clean_drinkdriving$speed[clean_drinkdriving$speed < 10] <- NA
[1] 19
clean_drinkdriving$speed <- unlist(lapply(clean_drinkdriving$speed, 
    round, 1))
[1] 20
class(clean_drinkdriving$bac)
[1] 21
[1] "numeric"
boxplot(clean_drinkdriving$bac, ylab = "bac", main = "Blood Alcohol Content (BAC) data distribution")
[1] 22
plot(clean_drinkdriving$bac, clean_drinkdriving$speed, xlab = "BAC", 
    ylab = "Speed(mph)", main = "Relationship between BAC and speed")
[1] 23
clean_drinkdriving$bac[clean_drinkdriving$bac > 40] <- NA
[1] 24
clean_drinkdriving$bac <- unlist(lapply(clean_drinkdriving$bac, 
    round, 2))
[1] 25
plot(clean_drinkdriving$bac, clean_drinkdriving$speed, xlab = "BAC", 
    ylab = "Speed(mph)", main = "Relationship between BAC and speed - clean data")
[1] 26
class(clean_drinkdriving$outcome)
[1] 27
[1] "character"
table(clean_drinkdriving$outcome)
[1] 28

   fine    Fine    FINE warning Warning WARNING 
    191       2       9      43       2       3 
clean_drinkdriving$outcome[clean_drinkdriving$outcome == "Fine" | 
    clean_drinkdriving$outcome == "FINE"] <- "fine"
[1] 29
clean_drinkdriving$outcome[clean_drinkdriving$outcome == "Warning" | 
    clean_drinkdriving$outcome == "WARNING"] <- "warning"
[1] 30
clean_drinkdriving$outcome <- factor(clean_drinkdriving$outcome)
[1] 31
levels(clean_drinkdriving$outcome)
[1] 32
[1] "fine"    "warning"
table(clean_drinkdriving$outcome)
[1] 33

   fine warning 
    202      48 
class(clean_drinkdriving$incident_id)
[1] 34
[1] "character"
table(clean_drinkdriving$incident_id)
[1] 35

  inc_1  inc_10 inc_100 inc_101 inc_102 inc_103 inc_104 inc_105 inc_106 inc_107 inc_108 inc_109  inc_11 inc_110 inc_111 inc_112 
      1       1       1       1       1       1       1       1       1       1       1       1       1       1       1       1 
inc_113 inc_114 inc_115 inc_116 inc_117 inc_118 inc_119  inc_12 inc_120 inc_121 inc_122 inc_123 inc_124 inc_125 inc_126 inc_127 
      1       1       1       1       1       1       1       1       1       1       1       1       1       1       1       1 
inc_128 inc_129  inc_13 inc_130 inc_131 inc_132 inc_133 inc_134 inc_135 inc_136 inc_137 inc_138 inc_139  inc_14 inc_140 inc_141 
      1       1       1       1       1       1       1       1       1       1       1       1       1       1       1       1 
inc_142 inc_143 
      1       1 
 [ reached getOption("max.print") -- omitted 200 entries ]
drinkdriving <- clean_drinkdriving
[1] 36
plot(clean_drinkdriving$age, clean_drinkdriving$speed, xlab = "Age", 
    ylab = "Speed(mph)", main = "Driver age vs speed")
[1] 37
with(clean_drinkdriving, cor.test(speed, age))
[1] 38

	Pearson's product-moment correlation

data:  speed and age
t = -11.568, df = 219, p-value < 2.2e-16
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 -0.6916142 -0.5266894
sample estimates:
      cor 
-0.615854 

plot(clean_drinkdriving$age, clean_drinkdriving$bac, xlab = "Age", 
    ylab = "BAC", main = "Driver age vs BAC")
[1] 39
with(clean_drinkdriving, cor.test(bac, age))
[1] 40

	Pearson's product-moment correlation

data:  bac and age
t = -5.8894, df = 216, p-value = 1.469e-08
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 -0.4810712 -0.2515251
sample estimates:
       cor 
-0.3719711 

plot(clean_drinkdriving$bac, clean_drinkdriving$speed, xlab = "BAC", 
    ylab = "Speed(mph)", main = "BAC vs speed")
[1] 41
with(clean_drinkdriving, cor.test(speed, bac))
[1] 42

	Pearson's product-moment correlation

data:  speed and bac
t = 8.0343, df = 237, p-value = 4.427e-14
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 0.3567122 0.5568662
sample estimates:
      cor 
0.4626647 

par(mfrow = c(2, 3))
[1] 43
$mfrow
[1] 2 2

plot(clean_drinkdriving$age, clean_drinkdriving$speed, xlab = "Age", 
    ylab = "Speed(mph)", main = "Driver age vs speed")
[1] 44
plot(clean_drinkdriving$age, clean_drinkdriving$bac, xlab = "Age", 
    ylab = "BAC", main = "Driver age vs BAC")
[1] 45
plot(clean_drinkdriving$bac, clean_drinkdriving$speed, xlab = "BAC", 
    ylab = "Speed(mph)", main = "BAC vs speed")
[1] 46
par(mfrow = c(1, 1))
[1] 47
$mfrow
[1] 2 3

m1 <- lm(bac ~ age, data = drinkdriving)
[1] 48
with(data = drinkdriving, plot(bac ~ age, xlab = "Driver age", 
    ylab = "Blood Alcohol Content", main = "Effect of driver age on BAC", 
    col = "slateblue", bty = "n", pch = 20))
[1] 49
abline(m1, col = "red")
[1] 50
par(mfrow = c(2, 2))
[1] 51
$mfrow
[1] 1 1

plot(m1, which = c(1:4))
[1] 52
summary(m1)
[1] 53

Call:
lm(formula = bac ~ age, data = drinkdriving)

Residuals:
     Min       1Q   Median       3Q      Max 
-15.3294  -4.1800  -0.5715   3.9995  14.9462 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 28.68505    1.06950  26.821  < 2e-16 ***
age         -0.13730    0.02331  -5.889 1.47e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.791 on 216 degrees of freedom
  (32 observations deleted due to missingness)
Multiple R-squared:  0.1384,	Adjusted R-squared:  0.1344 
F-statistic: 34.69 on 1 and 216 DF,  p-value: 1.469e-08

p.drinkdriving <- predict(m1, interval = "confidence")
[1] 54
drinkdriving_pred <- merge(drinkdriving, p.drinkdriving, by = "row.names")
[1] 55
ggplot(drinkdriving_pred, aes(x = age)) + geom_point(aes(y = bac), 
    col = "slateblue") + geom_line(aes(y = fit)) + geom_ribbon(aes(ymin = lwr, 
    ymax = upr), fill = "orange", alpha = 0.4) + theme_minimal() + 
    labs(title = " Confidence Interval of bac~age ", x = "Age ", 
        y = "BAC")
[1] 56
new_age <- data.frame(age = 50)
[1] 57
predict(m1, newdata = new_age)
[1] 58
       1 
21.81988 
par(mfrow = c(1, 1))
[1] 59
$mfrow
[1] 2 2

plot(m1, 2)
[1] 60
m2.speed <- lm(bac ~ age + speed, data = drinkdriving)
[1] 61
summary(m2.speed)
[1] 62

Call:
lm(formula = bac ~ age + speed, data = drinkdriving)

Residuals:
     Min       1Q   Median       3Q      Max 
-15.4353  -3.6423  -0.6599   3.8879  14.2899 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 23.83572    2.91739   8.170 2.81e-14 ***
age         -0.10318    0.03208  -3.217   0.0015 ** 
speed        0.08471    0.04578   1.850   0.0657 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.768 on 211 degrees of freedom
  (36 observations deleted due to missingness)
Multiple R-squared:  0.1601,	Adjusted R-squared:  0.1521 
F-statistic: 20.11 on 2 and 211 DF,  p-value: 1.016e-08

anova(m2.speed)
[1] 63
Analysis of Variance Table

Response: bac
           Df Sum Sq Mean Sq F value    Pr(>F)    
age         1 1224.1 1224.14 36.7928 5.996e-09 ***
speed       1  113.9  113.88  3.4229    0.0657 .  
Residuals 211 7020.2   33.27                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
m2.nighttime <- lm(bac ~ age + nighttime, data = drinkdriving)
[1] 64
summary(m2.nighttime)
[1] 65

Call:
lm(formula = bac ~ age + nighttime, data = drinkdriving)

Residuals:
     Min       1Q   Median       3Q      Max 
-16.3451  -4.3959   0.2957   3.7397  14.4052 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 27.93768    1.03293  27.047  < 2e-16 ***
age         -0.13690    0.02209  -6.198 2.92e-09 ***
nighttime.L  2.73548    0.56121   4.874 2.13e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.417 on 213 degrees of freedom
  (34 observations deleted due to missingness)
Multiple R-squared:  0.2421,	Adjusted R-squared:  0.235 
F-statistic: 34.03 on 2 and 213 DF,  p-value: 1.501e-13

anova(m2.nighttime)
[1] 66
Analysis of Variance Table

Response: bac
           Df Sum Sq Mean Sq F value    Pr(>F)    
age         1 1299.9 1299.95  44.294 2.353e-10 ***
nighttime   1  697.3  697.27  23.759 2.132e-06 ***
Residuals 213 6251.1   29.35                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
par(mfrow = c(1, 1))
[1] 67
$mfrow
[1] 1 1

plot(m2.nighttime, 2)
[1] 68
m2.nighttime_speed <- lm(bac ~ age + speed + nighttime, data = drinkdriving)
[1] 69
summary(m2.nighttime_speed)
[1] 70

Call:
lm(formula = bac ~ age + speed + nighttime, data = drinkdriving)

Residuals:
     Min       1Q   Median       3Q      Max 
-14.8033  -4.2301   0.4615   3.4885  14.2414 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 23.70907    2.76268   8.582 2.17e-15 ***
age         -0.10648    0.03046  -3.496 0.000577 ***
speed        0.07436    0.04336   1.715 0.087848 .  
nighttime.L  2.61969    0.56468   4.639 6.18e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.413 on 208 degrees of freedom
  (38 observations deleted due to missingness)
Multiple R-squared:  0.2566,	Adjusted R-squared:  0.2459 
F-statistic: 23.93 on 3 and 208 DF,  p-value: 2.395e-13

anova(m2.nighttime_speed)
[1] 71
Analysis of Variance Table

Response: bac
           Df Sum Sq Mean Sq F value    Pr(>F)    
age         1 1368.9 1368.87 46.7103 8.947e-11 ***
speed       1  104.6  104.58  3.5687   0.06027 .  
nighttime   1  630.7  630.73 21.5223 6.181e-06 ***
Residuals 208 6095.6   29.31                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
t.test(speed ~ nighttime, data = drinkdriving, var.equal = TRUE)
[1] 72

	Two Sample t-test

data:  speed by nighttime
t = -1.2864, df = 241, p-value = 0.1995
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -6.332121  1.329044
sample estimates:
  mean in group day mean in group night 
           39.30513            41.80667 

ggplot(data = drinkdriving[is.na(drinkdriving$nighttime) == FALSE, 
    ], aes(x = nighttime, y = speed)) + geom_boxplot(col = "blue") + 
    xlab("Time of day") + ylab("Speed")
[1] 73
describe(drinkdriving)
[1] 74
               vars   n  mean    sd median trimmed   mad min  max range  skew kurtosis   se
age               1 225 42.68 16.77     40   41.93 17.79  14   90    76  0.40    -0.52 1.12
nighttime*        2 247  1.68  0.47      2    1.73  0.00   1    2     1 -0.79    -1.38 0.03
prior_offence*    3 250   NaN    NA     NA     NaN    NA Inf -Inf  -Inf    NA       NA   NA
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]
q3_drinkdriving <- drinkdriving
[1] 75
q3_drinkdriving$prior_yn <- ifelse(drinkdriving$prior_offence == 
    "N", 1, 2)
[1] 76
q3_drinkdriving$nighttime <- ifelse(q3_drinkdriving$nighttime == 
    "day", 1, 2)
[1] 77
class(q3_drinkdriving$nighttime)
[1] 78
[1] "numeric"
q3_drinkdriving$fined <- ifelse(drinkdriving$outcome == "fine", 
    1, 0)
[1] 79
q3_drinkdriving$fined <- factor(q3_drinkdriving$fined)
[1] 80
levels(q3_drinkdriving$fined)
[1] 81
[1] "0" "1"
class(q3_drinkdriving$fined)
[1] 82
[1] "factor"
gl_m3 <- glm(fined ~ age + nighttime + scale(speed) + prior_yn + 
    scale(bac), data = q3_drinkdriving, family = binomial)
[1] 83
summary(gl_m3)
[1] 84

Call:
glm(formula = fined ~ age + nighttime + scale(speed) + prior_yn + 
    scale(bac), family = binomial, data = q3_drinkdriving)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.5705   0.0448   0.1669   0.4215   2.1806  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept)   5.13127    1.61723   3.173 0.001509 ** 
age          -0.04943    0.02098  -2.356 0.018479 *  
nighttime    -0.14267    0.55774  -0.256 0.798111    
scale(speed)  1.74750    0.52478   3.330 0.000869 ***
prior_yn      0.39352    0.61271   0.642 0.520704    
scale(bac)    1.31742    0.34818   3.784 0.000155 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 202.40  on 211  degrees of freedom
Residual deviance: 104.94  on 206  degrees of freedom
  (38 observations deleted due to missingness)
AIC: 116.94

Number of Fisher Scoring iterations: 7

anova(gl_m3)
[1] 85
Analysis of Deviance Table

Model: binomial, link: logit

Response: fined

Terms added sequentially (first to last)


             Df Deviance Resid. Df Resid. Dev
NULL                           211     202.40
age           1   61.590       210     140.81
nighttime     1    1.350       209     139.46
scale(speed)  1   16.235       208     123.22
prior_yn      1    0.157       207     123.06
scale(bac)    1   18.124       206     104.94
odds <- exp(coef(gl_m3))
[1] 86
odds

 (Intercept)          age    nighttime scale(speed)     prior_yn   scale(bac) 
 169.2323142    0.9517733    0.8670429    5.7402488    1.4821860    3.7337841 


q3_drinkdriving$prior_drink_offence <- NULL
[1] 88
q3_drinkdriving$prior_drink_offence <- ifelse(q3_drinkdriving$prior_offence == 
    "N", NA, ifelse(grepl("DR50", q3_drinkdriving$prior_offence), 
    1, 0))
[1] 89
cont_table3_2 <- with(q3_drinkdriving, table(outcome, prior_drink_offence))
[1] 90
cont_table3_2

         prior_drink_offence
outcome    0  1
  fine    14 40
  warning  7  4


fisher.test(cont_table3_2, alternative = "less")
[1] 92

	Fisher's Exact Test for Count Data

data:  cont_table3_2
p-value = 0.02098
alternative hypothesis: true odds ratio is less than 1
95 percent confidence interval:
 0.0000000 0.7734418
sample estimates:
odds ratio 
 0.2059002 

levels(q3_drinkdriving$outcome)
[1] 93
[1] "fine"    "warning"
levels(q3_drinkdriving$prior_yn)
[1] 94
NULL
cont_table3_3 <- with(q3_drinkdriving, table(outcome, prior_yn))
[1] 95
cont_table3_3

         prior_yn
outcome     1   2
  fine    148  54
  warning  37  11


chisq.test(cont_table3_3)
[1] 97

	Pearson's Chi-squared test with Yates' continuity correction

data:  cont_table3_3
X-squared = 0.1287, df = 1, p-value = 0.7198

q4_predicted_prod <- q3_drinkdriving
[1] 98
x <- 1:250
[1] 99
q4_predicted_prod$age <- x
[1] 100
q4_predicted_prod$nighttime <- 1
[1] 101
q4_predicted_prod$prior_yn <- 1
[1] 102
q4_predicted_prod$speed <- 30
[1] 103
q4_predicted_prod$bac <- 0
[1] 104
q4_predicted_prod$prior_offence <- NULL
[1] 105
q4_predicted_prod$outcome <- NULL
[1] 106
q4_predicted_prod$incident_id <- NULL
[1] 107
q4_predicted_prod$fined <- NULL
[1] 108
q4_predicted_prod$prior_drink_offence <- NULL
[1] 109
q4_predicted_prod$fine_prob <- 0
[1] 110
df <- subset(q4_predicted_prod, age >= 17 & age <= 90)
[1] 111
df$fit <- predict(gl_m3, newdata = df, type = "response")
[1] 112
ggplot(data = df, aes(x = age, y = fit, group = 1)) + geom_line(color = "red") + 
    geom_point() + labs(title = "Probability of a fine for drivers with no prior offences", 
    x = "Driver age", y = "predicted probability of a fine")
[1] 113
q5_drink_driving <- q3_drinkdriving
[1] 114
describe(q5_drink_driving)
[1] 115
               vars   n  mean    sd median trimmed   mad min  max range  skew kurtosis   se
age               1 225 42.68 16.77     40   41.93 17.79  14   90    76  0.40    -0.52 1.12
nighttime         2 247  1.68  0.47      2    1.73  0.00   1    2     1 -0.79    -1.38 0.03
prior_offence*    3 250   NaN    NA     NA     NaN    NA Inf -Inf  -Inf    NA       NA   NA
 [ reached 'max' / getOption("max.print") -- omitted 7 rows ]
q5_merged_df <- merge(officer_inc, q5_drink_driving, by.x = "incident_id")
[1] 116
table(q5_merged_df$officer)
[1] 117

 AS  IT  NP 
116  66  67 
barplot(table(q5_merged_df$officer), xlab = "officers", ylab = "no of incidents")
[1] 118
class(q5_merged_df$officer)
[1] 119
[1] "factor"
levels(q5_merged_df$officer)
[1] 120
[1] "AS" "IT" "NP"
df_AS <- subset(q5_merged_df, q5_merged_df$officer == "AS")
[1] 121
head(df_AS)
[1] 122
  incident_id officer age nighttime prior_offence speed   bac outcome prior_yn fined prior_drink_offence
1       inc_1      AS  39         2             N  48.0 17.71    fine        1     1                  NA
2      inc_10      AS  60         2             N    NA 24.42 warning        1     0                  NA
3     inc_100      AS  68         2             N  25.5 10.50 warning        1     0                  NA
5     inc_102      AS  47         1             N  37.1 20.76    fine        1     1                  NA
 [ reached 'max' / getOption("max.print") -- omitted 2 rows ]
describe(df_AS)
[1] 123
             vars   n   mean    sd median trimmed   mad min max range  skew kurtosis   se
incident_id*    1 116 128.94 72.44    133  130.02 91.92   1 248   247 -0.13    -1.25 6.73
officer*        2 116   1.00  0.00      1    1.00  0.00   1   1     0   NaN      NaN 0.00
age             3 108  40.94 17.64     39   39.86 20.76  14  90    76  0.56    -0.61 1.70
 [ reached 'max' / getOption("max.print") -- omitted 8 rows ]
nrow(df_AS)
[1] 124
[1] 116
df_IT <- subset(q5_merged_df, q5_merged_df$officer == "IT")
[1] 125
head(df_IT)
[1] 126
   incident_id officer age nighttime prior_offence speed   bac outcome prior_yn fined prior_drink_offence
10     inc_107      IT  86         2          TS70  29.9 25.85    fine        2     1                   0
11     inc_108      IT  45         2          DR50  29.6 31.27    fine        2     1                   1
15     inc_111      IT  43         2             N  21.5 25.10    fine        1     1                  NA
16     inc_112      IT  65         2             N  26.7 25.77    fine        1     1                  NA
 [ reached 'max' / getOption("max.print") -- omitted 2 rows ]
describe(df_IT)
[1] 127
             vars  n  mean    sd median trimmed    mad min max range skew kurtosis   se
incident_id*    1 66 123.3 74.69  120.5  121.72 100.82  10 250   240 0.15    -1.29 9.19
officer*        2 66   2.0  0.00    2.0    2.00   0.00   2   2     0  NaN      NaN 0.00
age             3 58  44.6 16.45   44.5   44.04  15.57  15  87    72 0.35     0.02 2.16
 [ reached 'max' / getOption("max.print") -- omitted 8 rows ]
nrow(df_IT)
[1] 128
[1] 66
df_NP <- subset(q5_merged_df, q5_merged_df$officer == "NP")
[1] 129
head(df_NP)
[1] 130
  incident_id officer age nighttime prior_offence speed   bac outcome prior_yn fined prior_drink_offence
4     inc_101      NP  35         1             N  44.4  8.55    fine        1     1                  NA
6     inc_103      NP  41         2             N  40.4 18.78    fine        1     1                  NA
7     inc_104      NP  36         2          DR50  45.4 17.98    fine        2     1                   1
9     inc_106      NP  21         2             N  55.8 29.81    fine        1     1                  NA
 [ reached 'max' / getOption("max.print") -- omitted 2 rows ]
describe(df_NP)
[1] 131
             vars  n   mean    sd median trimmed   mad min max range skew kurtosis   se
incident_id*    1 67 121.78 71.06    111  121.78 81.54   4 249   245 0.07    -1.14 8.68
officer*        2 67   3.00  0.00      3    3.00  0.00   3   3     0  NaN      NaN 0.00
age             3 59  43.95 15.33     41   43.73 14.83  17  73    56 0.17    -0.95 2.00
 [ reached 'max' / getOption("max.print") -- omitted 8 rows ]
nrow(df_NP)
[1] 132
[1] 67
par(mfrow = c(2, 2))
[1] 133
$mfrow
[1] 1 1

t.test(age ~ outcome, data = df_AS, var.equal = FALSE)
[1] 134

	Welch Two Sample t-test

data:  age by outcome
t = -11.829, df = 44.619, p-value = 2.378e-15
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -35.02017 -24.82761
sample estimates:
   mean in group fine mean in group warning 
             34.84884              64.77273 

with(df_AS, table(outcome, age))
[1] 135
         age
outcome   14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 41 42 43 45 46 47 48 50 52 54 56 57 58 59 60 61 62
         age
outcome   63 65 66 68 69 70 77 80 81 90
 [ reached getOption("max.print") -- omitted 2 rows ]
barplot(with(df_AS, table(outcome, age)), main = "Officer AS")
[1] 136
t.test(age ~ outcome, data = df_IT, var.equal = FALSE)
[1] 137

	Welch Two Sample t-test

data:  age by outcome
t = -2.8557, df = 15.362, p-value = 0.01181
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -27.272714  -3.988155
sample estimates:
   mean in group fine mean in group warning 
             41.36957              57.00000 

with(df_IT, table(outcome, age))
[1] 138
         age
outcome   15 17 23 24 25 26 30 31 33 34 35 37 38 39 40 42 43 44 45 46 47 49 51 52 53 54 55 56 57 58 60 62 65 70 80 86 87
  fine     3  1  1  1  1  1  3  0  1  3  2  1  1  1  2  2  1  2  2  2  1  1  1  2  3  1  0  0  2  1  0  0  1  1  0  1  0
 [ reached getOption("max.print") -- omitted 1 row ]
barplot(with(df_IT, table(outcome, age)), main = "Officer IT")
[1] 139
t.test(age ~ outcome, data = df_NP, var.equal = FALSE)
[1] 140

	Welch Two Sample t-test

data:  age by outcome
t = -2.2641, df = 10.985, p-value = 0.0448
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -27.9057938  -0.3921654
sample estimates:
   mean in group fine mean in group warning 
             41.55102              55.70000 

with(df_NP, table(outcome, age))
[1] 141
         age
outcome   17 18 19 20 21 22 24 28 29 32 33 34 35 36 37 38 39 41 46 47 48 49 50 51 52 54 55 58 60 61 62 64 66 68 69 70 73
  fine     1  0  1  1  1  1  2  0  1  3  1  2  4  2  3  1  3  2  1  2  1  2  2  1  1  0  3  1  1  2  0  0  0  0  1  2  0
 [ reached getOption("max.print") -- omitted 1 row ]
barplot(with(df_NP, table(outcome, age)), main = "Officer NP")
[1] 142
par(mfrow = c(1, 1))
[1] 143
$mfrow
[1] 2 2

