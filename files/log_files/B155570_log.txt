

	####### B155570 R script #######

library(ggplot2, quietly = T)
[1] 1
[1] "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
library(dplyr, quietly = T)
[1] 2
 [1] "dplyr"     "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
library(car, quietly = T)
[1] 3
 [1] "car"       "carData"   "dplyr"     "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[11] "methods"   "base"     
load(url("https://edin.ac/2QCZNVu"))
[1] 4
[1] "drinkdriving" "officer_inc" 
drinkdriving <- drinkdriving[drinkdriving$age < 100, ]
[1] 5
drinkdriving <- na.exclude(drinkdriving)
[1] 6
any(is.na(drinkdriving))
[1] 7
[1] FALSE
officer_inc <- na.exclude(officer_inc)
[1] 8
any(is.na(officer_inc))
[1] 9
[1] FALSE
m1 <- lm(bac ~ age, data = drinkdriving)
[1] 10
summary(m1)
[1] 11

Call:
lm(formula = bac ~ age, data = drinkdriving)

Residuals:
    Min      1Q  Median      3Q     Max 
-15.719  -4.516  -0.861   3.849  42.785 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 29.29455    1.25564  23.330  < 2e-16 ***
age         -0.14353    0.02741  -5.236 3.86e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.82 on 218 degrees of freedom
Multiple R-squared:  0.1117,	Adjusted R-squared:  0.1076 
F-statistic: 27.41 on 1 and 218 DF,  p-value: 3.863e-07

par(mfrow = c(2, 2))
[1] 12
$mfrow
[1] 1 1

plot(m1)
[1] 13
qqPlot(m1, labels = row.names(drinkdriving), id.method = "identify", 
    simulate = TRUE, main = "Q-Q Plot")
[1] 14
for (row in 1:nrow(drinkdriving)) {
    if (drinkdriving[row, "nighttime"] == "night") {
        drinkdriving[row, "nighttime"] = 1
    }
    else {
        drinkdriving[row, "nighttime"] = 0
    }
}
[1] 15
NULL
m2 <- lm(bac ~ age + nighttime + speed, data = drinkdriving)
[1] 16
summary(m2)
[1] 17

Call:
lm(formula = bac ~ age + nighttime + speed, data = drinkdriving)

Residuals:
    Min      1Q  Median      3Q     Max 
-13.382  -4.723   0.094   3.978  32.944 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 14.02969    2.76005   5.083 8.03e-07 ***
age         -0.02941    0.03242  -0.907    0.365    
nighttime1   3.76430    0.90506   4.159 4.61e-05 ***
speed        0.20141    0.03862   5.216 4.28e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.266 on 216 degrees of freedom
Multiple R-squared:  0.2569,	Adjusted R-squared:  0.2465 
F-statistic: 24.89 on 3 and 216 DF,  p-value: 7.198e-14

par(mfrow = c(2, 2))
[1] 18
$mfrow
[1] 2 2

plot(m2)
[1] 19
t.test(speed ~ nighttime, data = drinkdriving)
[1] 20

	Welch Two Sample t-test

data:  speed by nighttime
t = -0.13251, df = 146.8, p-value = 0.8948
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -4.202750  3.674557
sample estimates:
mean in group 0 mean in group 1 
       38.88877        39.15286 

drinkdriving

# A tibble: 220 x 7
     age nighttime prior_offence speed   bac outcome incident_id
   <dbl> <chr>     <chr>         <dbl> <dbl> <chr>   <chr>      
 1    39 1         N             48.0   17.7 fine    inc_1      
 2    28 0         N             43.8   22.1 fine    inc_2      
 3    38 1         DR50          47.3   32.8 fine    inc_3      
 4    51 1         N             17.2   20.5 warning inc_4      
 5    56 1         N              1.95  29.4 warning inc_5      
 6    36 0         N             41.4   19.1 fine    inc_6      
 7    81 1         N              1.01  21.4 warning inc_7      
 8    49 0         N             34.4   26.8 fine    inc_8      
 9    32 1         N             63.7   23.8 fine    inc_9      
10    60 1         N              2.53  24.4 warning inc_10     
# … with 210 more rows


drinkdriving$outcome[tolower(drinkdriving$outcome) == "fine"] <- 1
[1] 22
drinkdriving$outcome[tolower(drinkdriving$outcome) == "warning"] <- 0
[1] 23
drinkdriving$outcome <- as.numeric(drinkdriving$outcome)
[1] 24
drinkdriving$prior_offence[drinkdriving$prior_offence != "N"] <- 0
[1] 25
drinkdriving$prior_offence[drinkdriving$prior_offence == "N"] <- 1
[1] 26
drinkdriving$prior_offence <- as.numeric(drinkdriving$prior_offence)
[1] 27
m3 <- glm(outcome ~ age + speed + bac, data = drinkdriving)
[1] 28
summary(m3)
[1] 29

Call:
glm(formula = outcome ~ age + speed + bac, data = drinkdriving)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-1.04165  -0.13162   0.08013   0.21669   0.62799  

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.651492   0.146404   4.450 1.38e-05 ***
age         -0.007739   0.001652  -4.686 4.94e-06 ***
speed        0.006520   0.002069   3.151  0.00186 ** 
bac          0.009846   0.003340   2.948  0.00355 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.1022033)

    Null deviance: 34.595  on 219  degrees of freedom
Residual deviance: 22.076  on 216  degrees of freedom
AIC: 128.52

Number of Fisher Scoring iterations: 2

drinkdriving

# A tibble: 220 x 7
     age nighttime prior_offence speed   bac outcome incident_id
   <dbl> <chr>             <dbl> <dbl> <dbl>   <dbl> <chr>      
 1    39 1                     1 48.0   17.7       1 inc_1      
 2    28 0                     1 43.8   22.1       1 inc_2      
 3    38 1                     0 47.3   32.8       1 inc_3      
 4    51 1                     1 17.2   20.5       0 inc_4      
 5    56 1                     1  1.95  29.4       0 inc_5      
 6    36 0                     1 41.4   19.1       1 inc_6      
 7    81 1                     1  1.01  21.4       0 inc_7      
 8    49 0                     1 34.4   26.8       1 inc_8      
 9    32 1                     1 63.7   23.8       1 inc_9      
10    60 1                     1  2.53  24.4       0 inc_10     
# … with 210 more rows


drinkdriving$outcome[tolower(drinkdriving$outcome) == "fine"] <- 1
[1] 31
drinkdriving$outcome[tolower(drinkdriving$outcome) == "warning"] <- 0
[1] 32
drinkdriving$outcome <- as.numeric(drinkdriving$outcome)
[1] 33
prior_offence1 <- factor(drinkdriving$prior_offence, levels = c("N", 
    "CD10", "CD60", "CD60,CD10,DR80", "CD60,CD60", "DD20", "DR50", 
    "DR80", "PL10", "SP50", "SP60", "TS70", "TS70,DR50"), labels = c(0, 
    0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1))
[1] 34
m4 <- glm(drinkdriving$outcome ~ prior_offence1, family = binomial)
[1] 35


####################################################################################################

[1] "Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : \n  contrasts can be applied only to factors with 2 or more levels\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]): contrasts can be applied only to factors with 2 or more levels>
####################################################################################################


anova(m4, test = "Chisq")
[1] 36
[1] "Error in anova(m4, test = \"Chisq\") : object 'm4' not found\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in anova(m4, test = "Chisq"): object 'm4' not found>


####################################################################################################

[1] "Error in anova(m4, test = \"Chisq\") : object 'm4' not found\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in anova(m4, test = "Chisq"): object 'm4' not found>
####################################################################################################


summary(m4)
[1] 37
[1] "Error in summary(m4) : object 'm4' not found\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in summary(m4): object 'm4' not found>


####################################################################################################

[1] "Error in summary(m4) : object 'm4' not found\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in summary(m4): object 'm4' not found>
####################################################################################################


test <- drinkdriving
[1] 38
test$nighttime <- 0
[1] 39
test$prior_offence <- 0
[1] 40
test$bac <- 0
[1] 41
test$speed <- 30
[1] 42
test <- test[!is.na(test$age), ]
[1] 43
test <- test[test$age < 100, ]
[1] 44
predict(m3, data.frame(age = test$age, nighttime = 0, speed = 30, 
    bac = 0, prior_offence = 0), interval = "prediction", level = 0.95)
[1] 45
        1         2         3         4         5         6         7         8         9        10        11        12        13 
0.5452705 0.6304024 0.5530098 0.4523993 0.4137030 0.5684883 0.2202214 0.4678779 0.5994454 0.3827460 0.6304024 0.5297920 0.6690987 
       14        15        16        17        18        19        20        21        22        23        24        25        26 
0.5762276 0.5452705 0.4833564 0.5143135 0.5839668 0.4756171 0.5917061 0.3440496 0.6845773 0.4910957 0.7232736 0.4369208 0.4446601 
       27        28        29        30        31        32        33        34        35        36        37        38        39 
0.4601386 0.3363104 0.3904852 0.3130926 0.5297920 0.4369208 0.5839668 0.3363104 0.6304024 0.3053533 0.4833564 0.4214423 0.4446601 
       40        41        42        43        44        45        46        47        48        49        50 
0.4291815 0.5452705 0.4059638 0.6071846 0.5452705 0.6690987 0.6304024 0.4214423 0.7310129 0.5762276 0.6768380 
 [ reached getOption("max.print") -- omitted 170 entries ]
plot(test$age, predict(m3, data.frame(age = test$age, nighttime = 0, 
    speed = 30, bac = 0, prior_offence = 0), interval = "prediction", 
    level = 0.95))
[1] 46
full_data <- full_join(drinkdriving, officer_inc, by = "incident_id")
[1] 47
m5 <- lm(outcome ~ age * officer, data = full_data)
[1] 48
anova(m5)
[1] 49
Analysis of Variance Table

Response: outcome
             Df  Sum Sq Mean Sq F value  Pr(>F)    
age           1  9.7611  9.7611 87.3994 < 2e-16 ***
officer       2  0.2160  0.1080  0.9669 0.38192    
age:officer   2  0.7179  0.3589  3.2140 0.04214 *  
Residuals   214 23.9004  0.1117                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
summary(m5)
[1] 50

Call:
lm(formula = outcome ~ age * officer, data = full_data)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.05408 -0.11198  0.08163  0.20714  0.78157 

Coefficients:
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)    1.447068   0.082023  17.642  < 2e-16 ***
age           -0.015956   0.001856  -8.598 1.73e-15 ***
officerIT     -0.229930   0.154762  -1.486   0.1388    
officerNP     -0.237906   0.156325  -1.522   0.1295    
age:officerIT  0.006392   0.003306   1.933   0.0545 .  
age:officerNP  0.007341   0.003411   2.152   0.0325 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.3342 on 214 degrees of freedom
  (29 observations deleted due to missingness)
Multiple R-squared:  0.3091,	Adjusted R-squared:  0.293 
F-statistic: 19.15 on 5 and 214 DF,  p-value: 9.796e-16

