

	####### B153509 R script #######

library(ggplot2, quietly = T)
[1] 1
[1] "ggplot2"   "readr"     "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     
load(url("https://edin.ac/2QCZNVu"))
[1] 2
[1] "drinkdriving" "officer_inc" 
summary(drinkdriving)
[1] 3
      age          nighttime         prior_offence          speed             bac           outcome          incident_id       
 Min.   : 14.00   Length:250         Length:250         Min.   :  0.00   Min.   : 3.987   Length:250         Length:250        
 1st Qu.: 30.00   Class :character   Class :character   1st Qu.: 30.92   1st Qu.:19.264   Class :character   Class :character  
 Median : 40.50   Mode  :character   Mode  :character   Median : 40.64   Median :23.609   Mode  :character   Mode  :character  
 Mean   : 46.00                                         Mean   : 40.49   Mean   :23.605                                        
 3rd Qu.: 55.25                                         3rd Qu.: 48.84   3rd Qu.:27.898                                        
 Max.   :297.00                                         Max.   :120.34   Max.   :65.764                                        
 NA's   :22                                                              NA's   :5                                             
drinkdriving$age[xor(drinkdriving$age < 16, drinkdriving$age > 
    100)] <- NA
[1] 4
drinkdriving$nighttime <- factor(drinkdriving$nighttime, levels = c("day", 
    "night"))
[1] 5
drinkdriving$bac <- drinkdriving$bac/100
[1] 6
drinkdriving$bac[drinkdriving$bac > 0.5] <- NA
[1] 7
drinkdriving$speed[drinkdriving$speed > (mean(na.omit(drinkdriving$speed)) + 
    sd(drinkdriving$speed, na.rm = T) * 3)]
[1] 8
[1] 120.337
drinkdriving$speed[drinkdriving$speed > (mean(na.omit(drinkdriving$speed)) + 
    sd(drinkdriving$speed, na.rm = T) * 3)] <- NA
[1] 9
drinkdriving$outcome <- factor(tolower(drinkdriving$outcome))
[1] 10
ggplot(data = drinkdriving, aes(x = age, y = bac)) + geom_point(col = "blue")
[1] 11
cor.test(drinkdriving$bac, drinkdriving$age)
[1] 12

	Pearson's product-moment correlation

data:  drinkdriving$bac and drinkdriving$age
t = -5.3726, df = 210, p-value = 2.054e-07
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 -0.4607863 -0.2233336
sample estimates:
       cor 
-0.3476212 

m1 <- lm(bac ~ age, data = drinkdriving)
[1] 13
summary(m1)
[1] 14

Call:
lm(formula = bac ~ age, data = drinkdriving)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.152189 -0.041385 -0.006514  0.040468  0.148434 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.2836365  0.0113446  25.002  < 2e-16 ***
age         -0.0013121  0.0002442  -5.373 2.05e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.05826 on 210 degrees of freedom
  (38 observations deleted due to missingness)
Multiple R-squared:  0.1208,	Adjusted R-squared:  0.1167 
F-statistic: 28.86 on 1 and 210 DF,  p-value: 2.054e-07

bac_pred <- merge(drinkdriving, predict(m1, interval = "confidence"), 
    by = "row.names")
[1] 15
ggplot(data = bac_pred, aes(x = age)) + geom_point(aes(y = bac), 
    col = "blue") + geom_line(aes(y = fit), col = "red") + geom_ribbon(aes(ymin = lwr, 
    ymax = upr), fill = "orange", alpha = 0.4) + ggtitle("Blood Alcohol Percentage (bac) over Age of drivers") + 
    theme_classic()
[1] 16
fiftee_yrs_bac_predicted <- m1$coefficients[1] + 50 * m1$coefficients[2]
[1] 17
fiftee_yrs_bac_predicted

(Intercept) 
  0.2180321 


plot(m1, ask = F)
[1] 19
plot(m1, which = 4)
[1] 20
m2_speed <- lm(bac ~ age + speed, data = drinkdriving)
[1] 21
summary(m2_speed)
[1] 22

Call:
lm(formula = bac ~ age + speed, data = drinkdriving)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.152952 -0.040678 -0.006164  0.041570  0.144495 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.2639677  0.0279547   9.443  < 2e-16 ***
age         -0.0011497  0.0003228  -3.562 0.000456 ***
speed        0.0003325  0.0004319   0.770 0.442179    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.05832 on 209 degrees of freedom
  (38 observations deleted due to missingness)
Multiple R-squared:  0.1233,	Adjusted R-squared:  0.1149 
F-statistic:  14.7 on 2 and 209 DF,  p-value: 1.063e-06

anova(m2_speed)
[1] 23
Analysis of Variance Table

Response: bac
           Df  Sum Sq  Mean Sq F value    Pr(>F)    
age         1 0.09798 0.097979 28.8086 2.115e-07 ***
speed       1 0.00202 0.002016  0.5929    0.4422    
Residuals 209 0.71082 0.003401                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
par(mfrow = c(2, 2), oma = c(0, 0, 2, 0))
[1] 24
$mfrow
[1] 1 1

$oma
[1] 0 0 2 0

plot(m2_speed)
[1] 25
plot(m2_speed, id.n = NULL)
[1] 26
plot(m2_speed, id.n = 5, labels.id = NULL)
[1] 27
m2_speed_interaction <- lm(bac ~ age * speed, data = drinkdriving)
[1] 28
summary(m2_speed_interaction)
[1] 29

Call:
lm(formula = bac ~ age * speed, data = drinkdriving)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.153673 -0.041557 -0.007208  0.041151  0.141569 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  2.909e-01  4.456e-02   6.529 4.98e-10 ***
age         -1.709e-03  7.880e-04  -2.168   0.0313 *  
speed       -3.787e-04  1.011e-03  -0.374   0.7085    
age:speed    1.601e-05  2.059e-05   0.778   0.4376    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.05837 on 208 degrees of freedom
  (38 observations deleted due to missingness)
Multiple R-squared:  0.1259,	Adjusted R-squared:  0.1133 
F-statistic: 9.984 on 3 and 208 DF,  p-value: 3.549e-06

anova(m2_speed_interaction)
[1] 30
Analysis of Variance Table

Response: bac
           Df  Sum Sq  Mean Sq F value    Pr(>F)    
age         1 0.09798 0.097979 28.7541 2.178e-07 ***
speed       1 0.00202 0.002016  0.5918    0.4426    
age:speed   1 0.00206 0.002061  0.6050    0.4376    
Residuals 208 0.70876 0.003407                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
plot(m2_speed_interaction, ask = F)
[1] 31
m2_nighttime <- lm(bac ~ age + nighttime, data = drinkdriving)
[1] 32
summary(m2_nighttime)
[1] 33

Call:
lm(formula = bac ~ age + nighttime, data = drinkdriving)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.163850 -0.047255  0.003566  0.037773  0.144167 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)     0.2565845  0.0125146  20.503  < 2e-16 ***
age            -0.0013041  0.0002318  -5.625 5.97e-08 ***
nighttimenight  0.0387371  0.0081131   4.775 3.40e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.05455 on 207 degrees of freedom
  (40 observations deleted due to missingness)
Multiple R-squared:  0.2249,	Adjusted R-squared:  0.2174 
F-statistic: 30.03 on 2 and 207 DF,  p-value: 3.532e-12

anova(m2_nighttime)
[1] 34
Analysis of Variance Table

Response: bac
           Df  Sum Sq  Mean Sq F value    Pr(>F)    
age         1 0.11091 0.110912  37.268 5.007e-09 ***
nighttime   1 0.06785 0.067847  22.797 3.402e-06 ***
Residuals 207 0.61605 0.002976                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
nighttime_means <- data.frame(nighttime = c("day", "night"), 
    means = c(mean(na.omit(drinkdriving$bac[drinkdriving$nighttime == 
        "day"])), mean(na.omit(drinkdriving$bac[drinkdriving$nighttime == 
        "night"]))))
[1] 35
models <- data.frame(nighttime = c("day", "night"), intercepts = c(m2_nighttime$coefficients[1], 
    m2_nighttime$coefficients[1] + m2_nighttime$coefficients[3]))
[1] 36
speed_alpha <- drinkdriving$speed[is.na(drinkdriving$nighttime) == 
    FALSE]/max(na.omit(drinkdriving$speed[is.na(drinkdriving$nighttime) == 
    FALSE]))
[1] 37
ggplot(data = drinkdriving[is.na(drinkdriving$nighttime) == FALSE, 
    ], aes(x = age, y = bac, alpha = speed_alpha)) + geom_point() + 
    facet_grid(. ~ nighttime) + geom_abline(data = models, aes(intercept = models$intercepts, 
    slope = m2_nighttime$coefficients[2]), col = "red")
[1] 38
plot(m2_nighttime, ask = F)
[1] 39
with(drinkdriving, t.test(speed[nighttime == "day"], speed[nighttime == 
    "night"]))
[1] 40

	Welch Two Sample t-test

data:  speed[nighttime == "day"] and speed[nighttime == "night"]
t = -1.5101, df = 195.84, p-value = 0.1326
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -5.9957683  0.7955574
sample estimates:
mean of x mean of y 
 38.25278  40.85289 

ggplot(data = drinkdriving[is.na(drinkdriving$nighttime) == FALSE, 
    ], aes(x = nighttime, y = speed)) + geom_boxplot(col = "red")
[1] 41
prior_offence_fact <- drinkdriving$prior_offence
[1] 42
prior_offence_fact[grepl("DR50", prior_offence_fact)] <- "drink"
[1] 43
prior_offence_fact[prior_offence_fact != "N" & prior_offence_fact != 
    "drink"] <- "other"
[1] 44
prior_offence_fact <- as.factor(prior_offence_fact)
[1] 45
m4 <- glm(ifelse(drinkdriving$outcome == "warning", 1, 0) ~ age + 
    prior_offence_fact + nighttime + scale(speed) + scale(bac), 
    data = drinkdriving, family = "binomial")
[1] 46
summary(m4)
[1] 47

Call:
glm(formula = ifelse(drinkdriving$outcome == "warning", 1, 0) ~ 
    age + prior_offence_fact + nighttime + scale(speed) + scale(bac), 
    family = "binomial", data = drinkdriving)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.9327  -0.3807  -0.1356  -0.0273   3.1859  

Coefficients:
                        Estimate Std. Error z value Pr(>|z|)    
(Intercept)             -7.45935    1.63508  -4.562 5.07e-06 ***
age                      0.05058    0.02179   2.321   0.0203 *  
prior_offence_factN      1.78701    0.96094   1.860   0.0629 .  
prior_offence_factother  3.15255    1.23665   2.549   0.0108 *  
nighttimenight           0.36398    0.60030   0.606   0.5443    
scale(speed)            -1.98764    0.48660  -4.085 4.41e-05 ***
scale(bac)              -1.46601    0.37624  -3.896 9.76e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 212.912  on 209  degrees of freedom
Residual deviance:  98.396  on 203  degrees of freedom
  (40 observations deleted due to missingness)
AIC: 112.4

Number of Fisher Scoring iterations: 7

exp(coef(m4))
[1] 48
            (Intercept)                     age     prior_offence_factN prior_offence_factother          nighttimenight 
           5.760313e-04            1.051882e+00            5.971562e+00            2.339555e+01            1.439044e+00 
           scale(speed)              scale(bac) 
           1.370191e-01            2.308453e-01 
anova(m4, test = "Chisq")
[1] 49
Analysis of Deviance Table

Model: binomial, link: logit

Response: ifelse(drinkdriving$outcome == "warning", 1, 0)

Terms added sequentially (first to last)


                   Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    
NULL                                 209    212.912              
age                 1   65.240       208    147.672 6.632e-16 ***
prior_offence_fact  2    5.720       206    141.952   0.05726 .  
nighttime           1    0.111       205    141.841   0.73850    
scale(speed)        1   23.326       204    118.515 1.367e-06 ***
scale(bac)          1   20.118       203     98.396 7.280e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
which.max(c(abs(coef(m4)[5]), abs(coef(m4)[6])))
[1] 50
scale(speed) 
           2 
prior_offence_bin <- ifelse(drinkdriving$prior_offence == "N", 
    "No", "Yes")
[1] 51
offence_outcome_table <- xtabs(~drinkdriving$outcome + prior_offence_bin)
[1] 52
chisq.test(offence_outcome_table)
[1] 53

	Pearson's Chi-squared test with Yates' continuity correction

data:  offence_outcome_table
X-squared = 0.1287, df = 1, p-value = 0.7198

m4 <- glm(ifelse(drinkdriving$outcome == "warning", 1, 0) ~ age + 
    prior_offence_fact + +nighttime + speed + bac, data = drinkdriving, 
    family = "binomial")
[1] 54
fit <- c()
[1] 55
for (i in 17:80) {
    fit <- c(fit, 1 - (exp(coef(m4)[1] + coef(m4)[3] + coef(m4)[2] * 
        i + coef(m4)[6] * 30)/(1 + exp(coef(m4)[1] + coef(m4)[3] + 
        coef(m4)[2] * i + coef(m4)[6] * 30))))
}
[1] 56
NULL
ggplot(data = NULL, aes(17:80, fit)) + geom_col(col = "blue") + 
    ggtitle("Probability of receiving a fine predicted by age", 
        subtitle = "(all other predictors being constant)") + 
    xlab("age") + ylab("probability")
[1] 57
AS_ages <- with(drinkdriving, age[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "AS"]])
[1] 58
NP_ages <- with(drinkdriving, age[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "NP"]])
[1] 59
IT_ages <- with(drinkdriving, age[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "IT"]])
[1] 60
ggplot() + geom_boxplot(aes(x = "AS", y = AS_ages)) + geom_boxplot(aes(x = "IT", 
    y = IT_ages)) + geom_boxplot(aes(x = "NP", y = NP_ages)) + 
    xlab("officer") + ylab("age") + geom_abline(intercept = mean(na.omit(drinkdriving$age)), 
    slope = 0, col = "red")
[1] 61
with(drinkdriving, t.test(AS_ages, mu = mean(na.omit(age))))
[1] 62

	One Sample t-test

data:  AS_ages
t = -1.0318, df = 104, p-value = 0.3046
alternative hypothesis: true mean is not equal to 43.43836
95 percent confidence interval:
 38.34511 45.04537
sample estimates:
mean of x 
 41.69524 

with(drinkdriving, t.test(AS_ages, mu = mean(na.omit(age)), alternative = "less"))
[1] 63

	One Sample t-test

data:  AS_ages
t = -1.0318, df = 104, p-value = 0.1523
alternative hypothesis: true mean is less than 43.43836
95 percent confidence interval:
     -Inf 44.49902
sample estimates:
mean of x 
 41.69524 

with(drinkdriving, t.test(IT_ages, mu = mean(na.omit(age))))
[1] 64

	One Sample t-test

data:  IT_ages
t = 1.3472, df = 54, p-value = 0.1835
alternative hypothesis: true mean is not equal to 43.43836
95 percent confidence interval:
 42.08127 50.35509
sample estimates:
mean of x 
 46.21818 

with(drinkdriving, t.test(IT_ages, mu = mean(na.omit(age)), alternative = "greater"))
[1] 65

	One Sample t-test

data:  IT_ages
t = 1.3472, df = 54, p-value = 0.09177
alternative hypothesis: true mean is greater than 43.43836
95 percent confidence interval:
 42.76491      Inf
sample estimates:
mean of x 
 46.21818 

with(drinkdriving, t.test(NP_ages, mu = mean(na.omit(age))))
[1] 66

	One Sample t-test

data:  NP_ages
t = 0.25586, df = 58, p-value = 0.799
alternative hypothesis: true mean is not equal to 43.43836
95 percent confidence interval:
 39.95291 47.94539
sample estimates:
mean of x 
 43.94915 

AS_outcome <- with(drinkdriving, outcome[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "AS"]])
[1] 67
model_AS <- glm(AS_outcome ~ AS_ages, family = "binomial", na.action = na.exclude)
[1] 68
summary(model_AS)
[1] 69

Call:
glm(formula = AS_outcome ~ AS_ages, family = "binomial", na.action = na.exclude)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.40816  -0.29425  -0.12240  -0.05937   2.12672  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept) -9.56251    1.99853  -4.785 1.71e-06 ***
AS_ages      0.16111    0.03471   4.642 3.45e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 107.798  on 104  degrees of freedom
Residual deviance:  50.042  on 103  degrees of freedom
  (11 observations deleted due to missingness)
AIC: 54.042

Number of Fisher Scoring iterations: 7

plot(fitted(model_AS)[order(AS_ages)] ~ AS_ages[order(AS_ages)], 
    type = "l", xlab = "age", ylab = "p(outcome)")
[1] 70
NP_outcome <- with(drinkdriving, outcome[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "NP"]])
[1] 71
model_NP <- glm(NP_outcome ~ NP_ages, family = "binomial", na.action = na.exclude)
[1] 72
summary(model_NP)
[1] 73

Call:
glm(formula = NP_outcome ~ NP_ages, family = "binomial", na.action = na.exclude)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-1.1125  -0.6138  -0.4065  -0.2653   2.7179  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)   
(Intercept) -4.88454    1.48737  -3.284  0.00102 **
NP_ages      0.06757    0.02719   2.485  0.01296 * 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 53.699  on 58  degrees of freedom
Residual deviance: 46.224  on 57  degrees of freedom
  (8 observations deleted due to missingness)
AIC: 50.224

Number of Fisher Scoring iterations: 5

plot(fitted(model_NP)[order(NP_ages)] ~ NP_ages[order(NP_ages)], 
    type = "l", xlab = "age", ylab = "p(outcome)")
[1] 74
IT_outcome <- with(drinkdriving, outcome[incident_id %in% officer_inc$incident_id[officer_inc$officer == 
    "IT"]])
[1] 75
model_IT <- glm(IT_outcome ~ IT_ages, family = "binomial", na.action = na.exclude)
[1] 76
summary(model_IT)
[1] 77

Call:
glm(formula = IT_outcome ~ IT_ages, family = "binomial", na.action = na.exclude)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-1.6286  -0.6701  -0.5012  -0.3232   2.4283  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)   
(Intercept) -4.40869    1.35749  -3.248  0.00116 **
IT_ages      0.06310    0.02517   2.506  0.01219 * 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 57.706  on 54  degrees of freedom
Residual deviance: 49.961  on 53  degrees of freedom
  (11 observations deleted due to missingness)
AIC: 53.961

Number of Fisher Scoring iterations: 4

plot(fitted(model_IT)[order(IT_ages)] ~ IT_ages[order(IT_ages)], 
    type = "l", xlab = "age", ylab = "p(outcome)")
[1] 78
